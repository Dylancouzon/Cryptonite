{"version":3,"sources":["utils/api.js","components/DeleteAccount/index.js","components/Sidebar/index.js","utils/googleOauth.js","components/SignUp/index.js","utils/sessionContext.js","components/Login/index.js","components/Navbar/index.js","components/About/index.js","components/LearnMore/index.js","components/GetStarted/index.js","components/Accords/index.js","pages/Home.js","components/WalletCoins/index.js","components/TransHist/index.js","pages/Profile.js","components/CoinGraph/index.js","components/PayInfo/index.js","components/BuyForm/index.js","pages/Buy.js","components/SendForm/index.js","components/WalletCoinsSend/index.js","pages/Send.js","components/MiningHero/index.js","pages/Mining.js","components/Footer/index.js","App.js","index.js"],"names":["data","axios","post","get","delete","DeleteAccount","useState","show","setShow","handleClose","showConfirm","setShowConfirm","handleCloseConfirm","showSuccess","setShowSuccess","handleCloseSuccess","document","location","replace","showFailure","setShowFailure","handleCloseFailure","handleSubmit","e","preventDefault","privateKey","target","value","API","then","res","status","catch","err","response","Button","className","variant","onClick","block","Modal","onHide","backdrop","keyboard","Header","Title","Body","style","color","Footer","Form","id","onSubmit","Group","Label","fontSize","Control","type","placeholder","Text","fontWeight","Sidebar","marginTop","marginBottom","href","stringifiedParams","queryString","client_id","redirect_uri","scope","join","response_type","access_type","prompt","googleLoginUrl","urlParams","window","search","code","a","url","method","client_secret","grant_type","access_token","headers","Authorization","error","console","log","getAccessTokenFromCode","getGoogleUserInfo","userInfo","email","name","split","result","message","user","reload","SignUpForm","copied","setCopied","private_key","setPrivate","showAlert","setShowAlert","showAlertMessage","setShowAlertMessage","handleAlertMessage","handleShow","useEffect","alert","Alert","dismissible","onClose","submitData","username","password","confirm_password","public_key","controlId","InputGroup","readOnly","Append","navigator","clipboard","writeText","xmlns","width","height","fill","class","viewBox","d","SessionContext","React","createContext","publicKey","logged_in","setSession","useContext","Navigation","sidebarOpen","setSidebarOpen","loginComponent","setLoginComponent","handleLogout","onSetSidebarOpen","open","setTimeout","setSidebarState","buttons","Consumer","state","onSetOpen","sidenav","SignUp","Login","Navbar","Container","Nav","Item","to","src","alt","fillRule","title","body","Row","Col","md","About","isMobile","Card","Accordion","Toggle","as","eventKey","Collapse","LearnMore","GetStarted","Accords","defaultActiveKey","Home","WalletCoins","coin","setCoin","USD","setUSD","getUserBalance","getUSD","toFixed","textAlign","float","FormControl","TransHist","transactions","setTransactions","headerSortingStyle","backgroundColor","count","forEach","time","key","timestamp","Date","toLocaleString","fromAddress","amount","toAddress","columns","dataField","text","sort","sortCaret","order","column","expandRow","renderer","row","label","showExpandColumn","expandHeaderColumnRenderer","isAnyExpands","expandColumnRenderer","expanded","length","keyField","pagination","paginationFactory","striped","hover","condensed","Profile","CoinGraph","xAxis","setxAxis","yAxis","setYAxis","totalCoins","setTotalCoins","dataTemp","i","push","DateTime","fromMillis","date","month","day","usd_value","total_coins","labels","datasets","pointBackgroundColor","borderColor","yAxisID","paddingBottom","paddingTop","options","scales","y","ticks","beginAtZero","PayInfo","info","stripe","useStripe","elements","useElements","showFailed","setShowFailed","handleShowFailed","event","createPaymentMethod","card","getElement","CardNumberElement","CardExpiryElement","CardCvcElement","paymentMethod","total","_","trans","from","private","coins","justifyContent","disabled","span","offset","BuyForm","cost","useRef","setData","coinVal","setCoinVal","coinAmount","setCoinAmount","toggle","setToggle","usdVal","setUSDVal","usdAmount","setUSDAmount","fees","setFees","setTotal","invalid","setInvalid","invalid2","setInvalid2","hideButton","setHide","div","getValue","isNaN","isInvalid","fee","parseFloat","usd","toggleListener","boolean","val","paddingLeft","paddingRight","alignContent","marginLeft","marginRight","stopPropagation","ref","onChange","onFocus","Feedback","stripePromise","loadStripe","Buy","overflow","SendForm","formHandle","showAlertVariant","setShowAlertVariant","parseInt","padding","current","reduce","obj","input","getAttribute","Object","values","c","WalletCoinsUser","Send","MiningHero","timer","setTimer","isActive","setIsActive","countRef","showFail","setShowFail","handleCloseFail","Img","getSeconds","slice","minutes","Math","floor","getMinutes","formatTime","setInterval","clearInterval","MiningPage","bg","App","props","setState","this","Provider","exact","path","component","Mining","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"qmBAKe,EAEE,SAAUA,GACnB,OAAOC,IAAMC,KAAN,mBAA+BF,IAH/B,EAKH,SAAUA,GACd,OAAOC,IAAMC,KAAN,cAA0BF,IAN1B,EAQH,WACJ,OAAOC,IAAMC,KAAN,gBATA,EAWJ,SAAUF,GACb,OAAOC,IAAMC,KAAN,aAAyBF,IAZzB,EAcQ,SAAUA,GACzB,OAAOC,IAAME,IAAI,2BAA6BH,IAfvC,EAiBU,SAAUA,GAC3B,OAAOC,IAAME,IAAI,gCAAkCH,IAlB5C,EAoBE,SAAUA,GACnB,OAAOC,IAAME,IAAI,iBAAmBH,IArB7B,EAuBM,SAAUA,GACvB,OAAOC,IAAMC,KAAK,+BAAgCF,IAxB3C,EA0BE,SAAUA,GACnB,OAAOC,IAAME,IAAI,kBA3BV,EA6BW,SAAUH,GAC5B,OAAOC,IAAMG,OAAO,eAAiBJ,IA9B9B,EAgCH,SAAUA,GACd,OAAOC,IAAME,IAAI,8BAjCV,EAmCE,WACT,OAAOF,IAAME,IAAI,yBApCV,EAsCG,SAASH,GACnB,OAAOC,IAAME,IAAI,8BAvCV,EAyCK,SAAUH,GACtB,OAAOC,IAAMC,KAAK,iCAAkCF,I,gBCkH7CK,MA5Jf,WAEE,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAIlC,EAAsCF,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACMC,EAAqB,kBAAMD,GAAe,IAIhD,EAAsCL,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACMC,EAAqB,WACzBD,GAAe,GACfE,SAASC,SAASC,QAAQ,MAK5B,EAAsCZ,oBAAS,GAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KACMC,EAAqB,kBAAMD,GAAe,IAI1CE,EAAe,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAO,GAAGC,MAE/BC,EAAyBH,GACtBI,MAAK,SAACC,GACc,MAAfA,EAAIC,QAdkBjB,GAAe,MAoB1CkB,OAAM,SAACC,GACsB,MAAxBA,EAAIC,SAASH,QAhBSX,GAAe,MAsB7CR,KAGF,OACE,qCAEE,cAACuB,EAAA,EAAD,CAAQC,UAAU,YAAYC,QAAQ,iBAAiBC,QA9CxC,kBAAM9B,GAAQ,IA8C+C+B,OAAK,EAAjF,4BAKA,eAACC,EAAA,EAAD,CACEjC,KAAMA,EACNkC,OAAQhC,EACRiC,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,UACE,cAACJ,EAAA,EAAMK,MAAP,UACE,oDAGJ,cAACL,EAAA,EAAMM,KAAP,UACE,oBAAIC,MAAO,CAAEC,MAAO,OAApB,6DAEF,eAACR,EAAA,EAAMS,OAAP,WAEE,cAACd,EAAA,EAAD,CAAQG,QAAS7B,EAAjB,oBAGA,cAAC0B,EAAA,EAAD,CACEG,QAAS,WAEP7B,IApEoBE,GAAe,IAiEvC,2BAaJ,eAAC6B,EAAA,EAAD,CACEjC,KAAMG,EACN+B,OAAQ7B,EACR8B,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,UACE,cAACJ,EAAA,EAAMK,MAAP,UACE,4DAGJ,eAACK,EAAA,EAAD,CAAMC,GAAG,aAAaC,SAAU,SAAC7B,GAAD,OAAOD,EAAaC,IAApD,UACE,cAACiB,EAAA,EAAMM,KAAP,UACE,eAACI,EAAA,EAAKG,MAAN,WACE,cAACH,EAAA,EAAKI,MAAN,CAAYP,MAAO,CAAEQ,SAAU,IAA/B,oEACA,cAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,gBACtC,cAACR,EAAA,EAAKS,KAAN,CAAWZ,MAAO,CAAEC,MAAO,MAAOY,WAAY,QAA9C,sDAGJ,eAACpB,EAAA,EAAMS,OAAP,WACE,cAACd,EAAA,EAAD,CAAQG,QAAS1B,EAAjB,oBACA,cAACuB,EAAA,EAAD,CAAQgB,GAAG,aAAaM,KAAK,SAA7B,8BAMN,eAACjB,EAAA,EAAD,CACEjC,KAAMM,EACN4B,OAAQ1B,EACR2B,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,UACE,cAACJ,EAAA,EAAMK,MAAP,UACE,oEAGJ,cAACL,EAAA,EAAMM,KAAP,UACE,mEAEF,cAACN,EAAA,EAAMS,OAAP,UACE,cAACd,EAAA,EAAD,CAAQG,QAASvB,EAAjB,wBAKJ,eAACyB,EAAA,EAAD,CACEjC,KAAMY,EACNsB,OAAQpB,EACRqB,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMI,OAAP,UACE,cAACJ,EAAA,EAAMK,MAAP,UACE,kFAGJ,cAACL,EAAA,EAAMM,KAAP,UACE,gFAEF,cAACN,EAAA,EAAMS,OAAP,UACE,cAACd,EAAA,EAAD,CAAQG,QAASjB,EAAjB,4B,OC7GKwC,MAxCf,WAEE,OACE,gCACE,oBAAIzB,UAAU,iBAAiBW,MAAO,CAAEe,UAAW,GAAIC,aAAc,GAAIf,MAAO,cAAhF,wBAEA,cAACb,EAAA,EAAD,CACEC,UAAU,aACV4B,KAAK,WACLzB,OAAK,EAELF,QAAQ,gBALV,qBAQA,cAACF,EAAA,EAAD,CACEC,UAAU,aACV4B,KAAK,OACLzB,OAAK,EACLF,QAAQ,gBAJV,sBAOA,cAACF,EAAA,EAAD,CACEC,UAAU,aACV4B,KAAK,QACLzB,OAAK,EACLF,QAAQ,gBAJV,kBAOA,cAACF,EAAA,EAAD,CACEC,UAAU,aACV4B,KAAK,UACLzB,OAAK,EACLF,QAAQ,gBAJV,uBAOA,cAAC,EAAD,CAAeE,OAAK,Q,mDCpCpB0B,EAAoBC,YAAsB,CAC9CC,UAAW,2EACXC,aAAc,gCACdC,MAAO,CACL,iDACA,oDACAC,KAAK,KACPC,cAAe,OACfC,YAAa,UACbC,OAAQ,YAGGC,EAAc,uDAAmDT,GAExEU,EAAYT,QAAkBU,OAAO3D,SAAS4D,Q,4CA8BpD,WAAsCC,GAAtC,iBAAAC,EAAA,sEAC2B9E,IAAM,CAC3B+E,IAAI,sCACJC,OAAQ,OACRjF,KAAM,CACJmE,UAAW,2EACXe,cAAe,2BACfd,aAAc,gCACde,WAAY,qBACZL,UATR,uBACY9E,EADZ,EACYA,KADZ,kBAYWA,EAAKoF,cAZhB,4C,kEAeE,WAAiCA,GAAjC,iBAAAL,EAAA,sEACyB9E,IAAM,CAC3B+E,IAAK,gDACLC,OAAQ,MACRI,QAAS,CACPC,cAAc,UAAD,OAAYF,MAL/B,uBACUpF,EADV,EACUA,KADV,kBAQSA,GART,4C,sBA3CE2E,EAAUY,MACZC,QAAQC,IAAR,6BAAkCd,EAAUY,Q,2CAE3CG,CAAuBf,EAAUG,MACjCjD,MAAK,SAACC,I,4CACL6D,CAAkB7D,GACjBD,MAAK,SAAC+D,GACH,IAAM5F,EAAO,CACTmD,GAAIyC,EAASzC,GACb0C,MAAOD,EAASC,MAChBC,KAAMF,EAASE,KAAKC,MAAM,KAAKzB,KAAK,KAExC1C,EAAgB5B,GACf6B,MAAK,SAACmE,GACFA,EAAOhG,KAAKiG,UACbT,QAAQC,IAAIO,EAAOhG,KAAKiG,SACvBxE,EAAauE,EAAOhG,KAAKiG,SAGzBD,EAAOhG,KAAKkG,MACbtB,OAAO3D,SAASkF,kBAkCnB,IAAI1E,EAAa,G,OCuHX2E,MAxLf,WACI,MAAwB9F,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,oBAAS,GAArC,mBAAO+F,EAAP,KAAeC,EAAf,KACA,EAAkChG,mBAAS,IAA3C,mBAAOiG,EAAP,KAAoBC,EAApB,KAGA,EAAkClG,oBAAS,GAA3C,mBAAOmG,EAAP,KAAkBC,EAAlB,KACA,EAAgDpG,mBAAS,IAAzD,mBAAOqG,EAAP,KAAyBC,EAAzB,KAKMC,EAAqB,SAACZ,GACpBA,IACAS,GAAa,GACbE,EAAoBX,KAGtBa,EAAa,kBAAMtG,GAAQ,IAEjCuG,qBAAU,WACFtF,IAEA+E,EAAW/E,GACXqF,OAEL,IAIH,IAAMrG,EAAc,YACD,IAAX4F,GACA7F,GAAQ,GACRQ,SAASC,SAASC,QAAQ,YAC1BsF,EAAW,KAEXQ,MAAM,iCAqDd,OACI,qCACI,cAACC,EAAA,EAAD,CACI1G,KAAMkG,EACNpE,QAAQ,UACR6E,YAAY,OACZC,QAAS,WAtFjBT,GAAa,GACbE,EAAoB,KAiFhB,SAMI,4BAAID,MAGR,qBAAKvE,UAAU,iBAAiBW,MAAO,CAAEe,UAAW,GAAIC,aAAc,GAAIf,MAAO,cAAjF,SACI,2CAGJ,eAACE,EAAA,EAAD,CAAME,SAAU,SAAC7B,GAAD,OA3DH,SAACA,GAClBA,EAAEC,iBAEF,IAAM4F,EAAa,CACfC,SAAU9F,EAAEG,OAAO,GAAGC,MACtB2F,SAAU/F,EAAEG,OAAO,GAAGC,MACtB4F,iBAAkBhG,EAAEG,OAAO,GAAGC,MAC9BkE,MAAOtE,EAAEG,OAAO,GAAGC,MACnB6F,WAAY,gBAEhB5F,EAAWwF,GACNvF,MAAK,SAACC,GACgB,MAAfA,EAAIC,SACJyE,EAAW1E,EAAI9B,KAAKiG,SACpBa,QAGP9E,OAAM,SAACC,GACJ,OAAQA,EAAIC,SAASlC,KAAKiG,SACtB,IAAK,iDAGL,IAAK,iDAGL,IAAK,gCAGL,IAAK,wBAGL,IAAK,2BACDY,EAAmB5E,EAAIC,SAASlC,KAAKiG,SACrC,MAEJ,IAAK,gBACDY,EAAmB,sDACnB,MACJ,QACIA,EAAmB,0BAoBRvF,CAAaC,IAApC,UACI,cAAC2B,EAAA,EAAKG,MAAN,CAAYoE,UAAU,iBAAtB,SACI,cAACvE,EAAA,EAAKM,QAAN,CAAcC,KAAK,QAAQC,YAAY,kBAE3C,cAACR,EAAA,EAAKG,MAAN,CAAYoE,UAAU,oBAAtB,SACI,cAACvE,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,qBAE1C,cAACR,EAAA,EAAKG,MAAN,CAAYoE,UAAU,oBAAtB,SACI,cAACvE,EAAA,EAAKM,QAAN,CAAcC,KAAK,WAAWC,YAAY,cAE9C,cAACR,EAAA,EAAKG,MAAN,CAAYoE,UAAU,mBAAtB,SACI,cAACvE,EAAA,EAAKM,QAAN,CAAcC,KAAK,WAAWC,YAAY,uBAE9C,cAACvB,EAAA,EAAD,CACIsB,KAAK,SACL9B,MAAM,SACNS,UAAU,aACVG,OAAK,EACLF,QAAQ,gBALZ,wBAUJ,8BACI,8CAIJ,cAACF,EAAA,EAAD,CACI6B,KAAMU,EACNjB,KAAK,SACL9B,MAAM,SACNS,UAAU,aACVG,OAAK,EACLF,QAAQ,gBANZ,iCAWA,eAACG,EAAA,EAAD,CACI6D,OAAQA,EACR9F,KAAMA,EACNkC,OAAQhC,EACRiC,SAAS,SACTC,UAAU,EALd,UAOI,cAACH,EAAA,EAAMI,OAAP,UACI,cAACJ,EAAA,EAAMK,MAAP,UACI,+DAGR,eAACL,EAAA,EAAMM,KAAP,WACI,+HACA,eAACI,EAAA,EAAKG,MAAN,CAAYoE,UAAU,qBAAtB,UACI,cAACvE,EAAA,EAAKI,MAAN,UAAY,mBAAGH,GAAG,aAAN,4BACZ,eAACuE,EAAA,EAAD,WACI,cAACxE,EAAA,EAAKM,QAAN,CAAcpB,UAAU,YAAYuF,UAAQ,EAAChG,MAAO4E,IACpD,cAACmB,EAAA,EAAWE,OAAZ,UACI,cAACzF,EAAA,EAAD,CAAQE,QAAQ,oBAAoBC,QA1HxC,WACpBuF,UAAUC,UAAUC,UAAUxB,GAC9BD,GAAU,IAwHc,SACA,sBAAK0B,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeC,MAAM,kBAAkBC,QAAQ,YAAnH,UACI,sBAAMC,EAAE,6JACR,sBAAMA,EAAE,yMAO5B,cAAC9F,EAAA,EAAMS,OAAP,UACI,cAACd,EAAA,EAAD,CAAQE,QAAQ,UAAUC,QAAS7B,EAAnC,4BC7KL8H,GAPQC,IAAMC,cAAc,CACvCpB,SAAU,GACVqB,UAAW,GACXC,WAAW,EACXC,WAAY,eCiGDxC,OAhGf,WACI,IAAQwC,EAAeC,qBAAWN,IAA1BK,WAGR,EAAkCtI,oBAAS,GAA3C,mBAAOmG,EAAP,KAAkBC,EAAlB,KACA,EAAgDpG,mBAAS,IAAzD,mBAAOqG,EAAP,KAAyBC,EAAzB,KAKMC,EAAqB,SAACZ,GACrBA,IACCS,GAAa,GACbE,EAAoBX,KAkCxB,OACI,qCACI,cAACgB,EAAA,EAAD,CACI1G,KAAMkG,EACNpE,QAAQ,UACR6E,YAAY,OACZC,QAAS,WA9CrBT,GAAa,GACbE,EAAoB,KAyCZ,SAMI,4BAAID,MAGR,qBAAKvE,UAAU,iBAAiBW,MAAO,CAAEe,UAAW,GAAIC,aAAc,GAAIf,MAAO,cAAjF,SACI,yCAGJ,eAACE,EAAA,EAAD,CAAME,SAAU,SAAC7B,GAAD,OA7C5B,SAAsBA,GAClBA,EAAEC,iBAEF,IAAM4F,EAAa,CACfC,SAAU9F,EAAEG,OAAO,GAAGC,MACtB2F,SAAU/F,EAAEG,OAAO,GAAGC,OAE1BC,EAAUwF,GACTvF,MAAK,SAACC,GACH0D,QAAQC,IAAI3D,GACZ,IAAIuF,EAAWvF,EAAI9B,KAAKkG,KAAK,GAAGmB,SAC5BqB,EAAY5G,EAAI9B,KAAKkG,KAAK,GAAGsB,WAEjCoB,EAAW,CAACvB,WAAUqB,YAAWC,WADjB,IAEhB3H,SAASC,SAASC,QAAQ,QAE7Bc,OAAM,SAACC,GAGJ,OAFAuD,QAAQC,IAAIxD,EAAIC,UAETD,EAAIC,SAASlC,KAAKiG,SACrB,IAAK,kCACDY,EAAmB,sDACnB,MACJ,QACIA,EAAmB,8CAqBAvF,CAAaC,IAApC,UACI,cAAC2B,EAAA,EAAKG,MAAN,CAAYoE,UAAU,oBAAtB,SACI,cAACvE,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,8BAE1C,cAACR,EAAA,EAAKG,MAAN,CAAYoE,UAAU,oBAAtB,SACI,cAACvE,EAAA,EAAKM,QAAN,CAAcC,KAAK,WAAWC,YAAY,cAE9C,cAACvB,EAAA,EAAD,CACIsB,KAAK,SACLrB,UAAU,aACVG,OAAK,EACLF,QAAQ,gBAJZ,sBASJ,8BACI,8CAIJ,cAACF,EAAA,EAAD,CACA6B,KAAMU,EACNjB,KAAK,SACL9B,MAAM,SACNS,UAAU,aACVG,OAAK,EACLF,QAAQ,gBANR,mC,OC+CDyG,OA7Hf,WACI,IAAQH,EAAcE,qBAAWN,IAAzBI,UACR,EAAsCrI,oBAAS,GAA/C,mBAAOyI,EAAP,KAAoBC,EAApB,KACA,EAA4C1I,mBAAS,QAArD,mBAAO2I,EAAP,KAAuBC,EAAvB,KAEMC,EAAe,WACjBvH,IACKC,MAAK,SAAAC,GACF0D,QAAQC,IAAI3D,GACZd,SAASC,SAASC,QAAQ,SAIhCkI,EAAmB,SAACC,GACtBL,EAAeK,IAEnBC,YAAW,WACH7H,IACA2H,GAAiB,GACjBG,EAAgB,aAErB,KACH,IAAMA,EAAkB,SAACC,GACrBN,EAAkBM,IAEtB,OAAIb,EAEI,cAAC,GAAec,SAAhB,UACK,SAACC,GAAD,OACG,mCACI,cAAC,IAAD,CACIL,KAAMN,EACNY,UAAWP,EACXQ,QACuB,SAAnBX,EAA4B,cAAC,EAAD,IAAiC,WAAnBA,EAA8B,cAACY,EAAD,IAAiB,cAACC,GAAD,eAAeJ,IAJhH,SAOI,cAACK,EAAA,EAAD,CAAQ3H,UAAU,kCAAlB,SACI,eAAC4H,EAAA,EAAD,WACI,cAACC,EAAA,EAAIC,KAAL,UACI,eAAC,IAAD,CAAM9H,UAAU,eAAe+H,GAAG,IAAlC,UACI,qBAAKhH,GAAG,OAAOiH,IAAI,iCAAiCC,IAAI,eAD5D,kBAKJ,cAACJ,EAAA,EAAD,CAAK7H,UAAU,UAAf,SACI,eAAC6H,EAAA,EAAIC,KAAL,CAAU9H,UAAU,SAApB,UACI,cAACD,EAAA,EAAD,CACIgB,GAAG,SACHd,QAAQ,gBACRoB,KAAK,SACLnB,QAAS6G,EAJb,oBAMA,cAAChH,EAAA,EAAD,CACIgB,GAAG,OACHf,UAAU,gBACVC,QAAQ,gBACRoB,KAAK,SACLnB,QAAS,WACL8G,GAAiB,GACjBG,EAAgB,SAPxB,SASI,qBAAKvB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAe/F,UAAU,uBAAuBiG,QAAQ,YAA5H,SACI,sBAAMiC,SAAS,UAAUhC,EAAE,8MAevE,cAAC,GAAemB,SAAhB,UACK,SAACC,GAAD,OACG,mCACI,cAAC,IAAD,CACIL,KAAMN,EACNY,UAAWP,EACXQ,QACuB,SAAnBX,EAA4B,cAAC,EAAD,IAAiC,WAAnBA,EAA8B,cAACY,EAAD,IAAiB,cAACC,GAAD,eAAeJ,IAJhH,SAOI,cAACK,EAAA,EAAD,CAAQ3H,UAAU,uCAAlB,SACI,eAAC4H,EAAA,EAAD,WACI,cAACC,EAAA,EAAIC,KAAL,UACI,eAAC,IAAD,CAAM9H,UAAU,eAAe+H,GAAG,IAAlC,UACI,qBAAKhH,GAAG,OAAOiH,IAAI,iCAAiCC,IAAI,eAD5D,kBAKJ,eAACJ,EAAA,EAAIC,KAAL,CAAU9H,UAAU,SAApB,UACI,cAACD,EAAA,EAAD,CACIgB,GAAG,SACHM,KAAK,SACLpB,QAAQ,gBACRC,QAAS,WACL8G,GAAiB,GACjBG,EAAgB,WANxB,qBASA,cAACpH,EAAA,EAAD,CACIgB,GAAG,QACHM,KAAK,SACLpB,QAAQ,gBACRC,QAAS,WACL8G,GAAiB,GACjBG,EAAgB,UANxB,mC,iDChH9BgB,I,OAAQ,SAERC,GACJ,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAGvI,UAAU,WAAtB,cAAkC,6BAAKmI,KACrC,kmBAKF,cAACG,GAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,qBAAKP,IAAK,4BAA6BrH,MAAO,CAACkF,MAAO,IAAKC,OAAQ,KAAK9F,UAAU,cAAciI,IAAI,cAiCrGO,OA7Bf,WAEE,OAAIC,YAEA,eAACC,GAAA,EAAD,CAAM1I,UAAU,YAAhB,UACE,cAAC2I,GAAA,EAAUC,OAAX,CAAkBC,GAAIH,KAAKlI,OAAQsI,SAAS,IAA5C,SACGX,KAGH,cAACQ,GAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACJ,GAAA,EAAKhI,KAAN,UACG0H,UASP,cAACM,GAAA,EAAD,CAAM1I,UAAU,cAAhB,SACE,cAAC0I,GAAA,EAAKhI,KAAN,UACG0H,QCrCLD,I,OAAQ,cAERC,GACJ,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,qBAAKP,IAAK,+EAAgFhI,UAAU,QAAQiI,IAAI,iBAC5H,eAACK,GAAA,EAAD,CAAKC,GAAI,EAAGvI,UAAU,WAAWe,GAAG,YAApC,cAAiD,6BAAKoH,KACpD,qmBAoCSa,OA3Bf,WACE,OAAIP,YAEA,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAUC,OAAX,CAAkBC,GAAIH,KAAKlI,OAAQsI,SAAS,IAA5C,SACGX,KAGH,cAACQ,GAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACJ,GAAA,EAAKhI,KAAN,UACG0H,UAQP,cAACM,GAAA,EAAD,CAAM1I,UAAU,cAAhB,SACI,cAAC0I,GAAA,EAAKhI,KAAN,UACG0H,QCnCPD,GAAQ,cAERC,GACJ,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAGvI,UAAU,WAAtB,cAAkC,6BAAKmI,KACrC,+lBAIA,cAACpI,EAAA,EAAD,CAAQE,QAAQ,OAAhB,0BAEF,cAACqI,GAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,qBAAKP,IAAK,kFAAmFhI,UAAU,QAAQiI,IAAI,iBAiCpHgB,OA7Bf,WAEE,OAAIR,YAEA,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAUC,OAAX,CAAkBC,GAAIH,KAAKlI,OAAQsI,SAAS,IAA5C,SACGX,KAGH,cAACQ,GAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACJ,GAAA,EAAKhI,KAAN,UACO0H,UASX,cAACM,GAAA,EAAD,CAAM1I,UAAU,cAAhB,SACI,cAAC0I,GAAA,EAAKhI,KAAN,UACO0H,QCpBFc,OAhBf,WAGE,OAEE,mCACE,eAACP,GAAA,EAAD,CAAWQ,iBAAiB,IAA5B,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,UCJOC,OARf,WACE,OACE,mCACE,cAAC,GAAD,O,iBCoDSC,OAjDf,WAEI,MAAgC5C,qBAAWN,IAAnCG,EAAR,EAAQA,UAAWrB,EAAnB,EAAmBA,SACnB,EAAwB/G,qBAAxB,mBAAOoL,EAAP,KAAaC,EAAb,KACA,EAAsBrL,qBAAtB,mBAAOsL,EAAP,KAAYC,EAAZ,KAEA9E,qBAAU,WACN+E,OAGJ,IAAMA,EAAiB,WACnBlK,EAAsB8G,GACjB7G,MAAK,SAAAC,GACF6J,EAAQ7J,EAAI9B,MACZ+L,QAGNA,EAAS,WACXnK,IACKC,MAAK,SAAAC,GACF,IAAMH,EAAQG,EAAI9B,KAAO0L,EACzBG,EAAOlK,EAAMqK,QAAQ,QAGjC,OACI,eAAChC,EAAA,EAAD,WACI,eAACc,GAAA,EAAD,CAAMN,MAAI,EAACpI,UAAU,aAAaW,MAAO,CAAEkJ,UAAW,UAAtD,UACI,2CAAc5E,EAAd,OACA,qBAAItE,MAAO,CAACmJ,MAAO,QAAnB,mBAAmCR,KAFvC,IAEkD,qBAAI3I,MAAO,CAACmJ,MAAO,SAAnB,oBAAqCN,QAEvF,eAACd,GAAA,EAAD,CAAMN,MAAI,EAACpI,UAAU,aAAaW,MAAO,CAAEkJ,UAAW,UAAtD,UACI,cAAC/I,EAAA,EAAKI,MAAN,UAAY,+CACZ,eAACoE,EAAA,EAAD,CAAYtF,UAAU,OAAtB,UACI,cAAC+J,GAAA,EAAD,CACIxE,UAAQ,EACRjE,YAAagF,IAEjB,cAAChB,EAAA,EAAWE,OAAZ,UACI,cAACzF,EAAA,EAAD,CAAQE,QAAQ,oBAAhB,SAAoC,sBAAK2F,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeC,MAAM,kBAAkBC,QAAQ,YAAnH,UAChC,sBAAMC,EAAE,6JACR,sBAAMA,EAAE,0M,iDCgIrB8D,OA7Jf,WAEE,MAAgCvD,qBAAWN,IAAnCG,EAAR,EAAQA,UAAWrB,EAAnB,EAAmBA,SACnB,EAAwC/G,mBAAS,IAAjD,mBAAO+L,EAAP,KAAqBC,EAArB,KACMC,EAAqB,CAAEC,gBAAiB,UAAWxJ,MAAO,SAWhE+D,qBAAU,WACRvB,QAAQC,IAAI,SACZ7D,EAAwB8G,GACrB7G,MAAK,SAAAC,GACJ0D,QAAQC,IAAI3D,EAAI9B,MAChB,IAAIyM,EAAQ,EACZ3K,EAAI9B,KAAK0M,SAAQ,SAAA1M,GAbD,IAAC2M,EAcf3M,EAAK4M,IAAMH,EACXzM,EAAK6M,WAfUF,EAegB3M,EAAK6M,UAbvB,IAAIC,KADNH,GAEaI,kBAapB/M,EAAKgN,cAAgBtE,IACvB1I,EAAKgN,YAAc3F,EACnBrH,EAAKiN,OAAS,MAAQjN,EAAKiN,OAC3BrL,EAAgB5B,EAAKkN,WAClBrL,MAAK,SAAAmE,GACJR,QAAQC,IAAIO,EAAOhG,KAAKiG,SACxBjG,EAAKkN,UAAYlH,EAAOhG,KAAKiG,YAG/BjG,EAAKkN,YAAcxE,IACrB1I,EAAKkN,UAAY7F,EACjBrH,EAAKiN,OAAS,MAAQjN,EAAKiN,OACvBjN,EAAKgN,YACPpL,EAAgB5B,EAAKgN,aAClBnL,MAAK,SAAAmE,GACJR,QAAQC,IAAIO,EAAOhG,KAAKiG,SACxBjG,EAAKgN,YAAchH,EAAOhG,KAAKiG,WAGnCjG,EAAKgN,YAAc,UAGvBP,OAEFjH,QAAQC,IAAI3D,EAAI9B,MAChBsJ,YAAW,WACTgD,EAAgBxK,EAAI9B,QACnB,UAGN,CAAC0I,EAAWrB,IAGf,IAAM8F,EAAU,CAAC,CACfC,UAAW,cACXC,KAAM,OACNC,MAAM,EACNf,qBACAgB,UAAW,SAACC,EAAOC,GACjB,OAAKD,EACc,QAAVA,EAAyB,4CAAkB,mBAAGpL,UAAU,mBAAqB,mBAAGA,UAAU,+BAChF,SAAVoL,EAA0B,4CAAkB,mBAAGpL,UAAU,0BAA4B,mBAAGA,UAAU,wBACpG,KAHa,4CAAkB,mBAAGA,UAAU,mBAAqB,mBAAGA,UAAU,0BAKtF,CACDgL,UAAW,YACXC,KAAM,YACNC,MAAM,EACNf,qBACAgB,UAAW,SAACC,EAAOC,GACjB,OAAKD,EACc,QAAVA,EAAyB,4CAAkB,mBAAGpL,UAAU,mBAAqB,mBAAGA,UAAU,+BAChF,SAAVoL,EAA0B,4CAAkB,mBAAGpL,UAAU,0BAA4B,mBAAGA,UAAU,wBACpG,KAHa,4CAAkB,mBAAGA,UAAU,mBAAqB,mBAAGA,UAAU,0BAKtF,CACDgL,UAAW,SACXC,KAAM,SACNC,MAAM,EACNf,qBACAgB,UAAW,SAACC,EAAOC,GACjB,OAAKD,EACc,QAAVA,EAAyB,4CAAkB,mBAAGpL,UAAU,mBAAqB,mBAAGA,UAAU,+BAChF,SAAVoL,EAA0B,4CAAkB,mBAAGpL,UAAU,0BAA4B,mBAAGA,UAAU,wBACpG,KAHa,4CAAkB,mBAAGA,UAAU,mBAAqB,mBAAGA,UAAU,0BAKtF,CACDgL,UAAW,YACXC,KAAM,YACNC,MAAM,EACNf,qBACAgB,UAAW,SAACC,EAAOC,GACjB,OAAKD,EACc,QAAVA,EAAyB,4CAAkB,mBAAGpL,UAAU,mBAAqB,mBAAGA,UAAU,+BAChF,SAAVoL,EAA0B,4CAAkB,mBAAGpL,UAAU,0BAA4B,mBAAGA,UAAU,wBACpG,KAHa,4CAAkB,mBAAGA,UAAU,mBAAqB,mBAAGA,UAAU,2BAQnFsL,EAAY,CAChBC,SAAU,SAAAC,GAAG,OACX,8BACE,4BAAIA,EAAIC,WAGZC,kBAAkB,EAClBC,2BAA4B,YAC1B,OADgD,EAAnBC,aAEpB,kCAEF,mCAETC,qBAAsB,YACpB,OADsC,EAAfC,SAGnB,kCAIF,sCAKN,OADA1I,QAAQC,IAAI4G,GACgB,IAAxBA,EAAa8B,OAEb,cAACnE,EAAA,EAAD,UACE,cAACc,GAAA,EAAD,CAAMN,MAAI,EAACzH,MAAO,CAAEkJ,UAAW,SAAUO,gBAAiB,UAAWxJ,MAAO,WAA5E,SAAyF,mEAK3F,mCACE,cAACgH,EAAA,EAAD,UACE,cAAC,KAAD,CACE5H,UAAU,QACVW,MAAO,CAAEkJ,UAAW,UACpBmC,SAAS,MACTpO,KAAMqM,EACNc,QAASA,EACTO,UAAWA,EACXW,WAAYC,OACZC,SAAO,EACPC,OAAK,EACLC,WAAS,SCxJNC,OAVf,WACE,OACE,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,Q,2BCqESC,OAzEf,WACI,MAA0BrO,mBAAS,IAAnC,mBAAOsO,EAAP,KAAcC,EAAd,KACA,EAA0BvO,mBAAS,IAAnC,mBAAOwO,EAAP,KAAcC,EAAd,KACA,EAAoCzO,mBAAS,IAA7C,mBAAO0O,EAAP,KAAmBC,EAAnB,KAEAlI,qBAAU,WACNnF,IACKC,MAAK,SAACmE,GACHR,QAAQC,IAAIO,GAGZ,IAFA,IAAI6H,EAAQ,GACRqB,EAAW,GACNC,EAAI,EAAGA,EAAInJ,EAAOhG,KAAKmO,OAAQgB,IAEpCtB,EAAMuB,KAAKC,YAASC,WAAWtJ,EAAOhG,KAAKmP,GAAGI,MAAMxC,eAAe,CAAEyC,MAAO,QAASC,IAAK,aAE1FP,EAASE,KAAKpJ,EAAOhG,KAAKmP,GAAGO,WAEjCb,EAAShB,GACTkB,EAASG,GACTD,EAAcjJ,EAAOhG,KAAKgG,EAAOhG,KAAKmO,OAAS,GAAGwB,kBAE3D,IAEH,IAAM3P,EAAO,CACT4P,OAAQhB,EACRiB,SAAU,CACN,CACIhC,MAAO,QACP7N,KAAM8O,EACN3G,MAAM,EACNqE,gBAAiB,wBACjBsD,qBAAsB,kBACtBC,YAAa,sBACbC,QAAS,OAiBrB,OACI,mCACI,eAAClF,GAAA,EAAD,CAAM1I,UAAU,aAAaW,MAAO,CAChCyJ,gBAAiB,YACjBxJ,MAAO,kBACPiN,cAAe,OACfnM,UAAW,QAJf,UAMI,qBAAK1B,UAAU,SAAf,SACI,8DAAiC4M,OAGrC,oBAAI5M,UAAU,QAAQW,MAAO,CACzBkJ,UAAW,SACXiE,WAAY,OACZ3M,SAAU,QAHd,mCAKA,cAAC,KAAD,CAAMvD,KAAMA,EAAMmQ,QA7Bd,CACZC,OAAQ,CACJC,EAAG,CACC,CACIC,MAAO,CACHC,aAAa,e,kBCmItBC,GAvKC,SAACC,GAEb,IAAQ/H,EAAcG,qBAAWN,IAAzBG,UACFgI,EAASC,uBACTC,EAAWC,yBAGjB,EAAwBvQ,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAc,WAChBD,GAAQ,GACRiQ,EAAKzQ,KAAKO,MAAO,GAEfuG,EAAa,kBAAMtG,GAAQ,IAGjC,EAAsCF,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACMC,EAAqB,kBAAMD,GAAe,IAIhD,EAAoCR,oBAAS,GAA7C,mBAAOwQ,EAAP,KAAmBC,EAAnB,KAEMC,EAAmB,kBAAMD,GAAc,IAE7ChK,qBAAU,YACiB,IAAnB0J,EAAKzQ,KAAKO,MACVC,GAAQ,KAEb,CAACiQ,EAAKzQ,KAAKO,OAGd,IAAMe,EAAY,uCAAG,WAAO2P,GAAP,qBAAAlM,EAAA,6DACjBkM,EAAMzP,iBADW,SAEsBkP,EAAOQ,oBAAoB,CAC9DzN,KAAM,OACN0N,KAAMP,EAASQ,WAAWC,qBAAmBC,qBAAmBC,qBAJnD,mBAEThM,EAFS,EAETA,MAAOiM,EAFE,EAEFA,cAIVjM,EANY,wBAOLpC,EAAOqO,EAAPrO,GAPK,mBASHlD,IAAMC,KAAK,qBAAsB,CAAEiD,KAAI8J,OAA0B,IAAlBwD,EAAKzQ,KAAKyR,QAC1D5P,MAAK,SAAC6P,GACH,IAAMC,EAAQ,CACVC,KAAM,qIACNC,QAAS,mEACT1H,GAAIzB,EACJmF,MAAO,gBAAkB4C,EAAKzQ,KAAKyR,MACnCxE,OAAQwD,EAAKzQ,KAAK8R,OAEtBlQ,EAAmB+P,GACd9P,MAAK,SAAAC,GACFF,EAAoB+P,GACf9P,MAAK,SAAAC,GACFrB,IApCJK,GAAe,MAsCZkB,OAAM,SAAAC,GACLuD,QAAQC,IAAIxD,GACZxB,IACAuQ,UAEThP,OAAM,SAAAC,GACLuD,QAAQC,IAAIxD,GACZxB,IACAuQ,UAEThP,OAAM,SAACC,GACNuD,QAAQC,IAAIxD,GACZxB,IACAuQ,OArCC,0DA0CTvQ,IACAuQ,IACAxL,QAAQC,IAAR,MA5CS,0DAAH,sDAiDlB,OACI,gCAEI,eAACjD,EAAA,EAAD,CACIjC,KAAMA,EACNkC,OAAQhC,EACRkC,UAAU,EAHd,UAII,cAACH,EAAA,EAAMI,OAAP,CAAcG,MAAO,CAAEgP,eAAgB,UAAvC,SACI,cAACvP,EAAA,EAAMK,MAAP,UACI,yDAGR,cAACL,EAAA,EAAMM,KAAP,UACI,eAACI,EAAA,EAAD,CAAME,SAAU9B,EAAhB,UACI,cAAC4B,EAAA,EAAKG,MAAN,CAAYjB,UAAU,YAAtB,SACI,cAAC,qBAAD,MAEJ,cAACc,EAAA,EAAKG,MAAN,CAAYjB,UAAU,YAAtB,SACI,cAAC,qBAAD,MAEJ,cAACc,EAAA,EAAKG,MAAN,CAAYjB,UAAU,YAAtB,SACI,cAAC,kBAAD,MAEJ,cAACD,EAAA,EAAD,CAAQY,MAAO,CAAEkF,MAAO,MAAOiE,MAAO,SAAWzI,KAAK,SAASuO,UAAWtB,EAA1E,qCAMZ,eAAClO,EAAA,EAAD,CACIjC,KAAMM,EACN4B,OAAQ1B,EACR4B,UAAU,EAHd,UAKI,cAACH,EAAA,EAAMI,OAAP,CAAcG,MAAO,CAAEgP,eAAgB,UAAvC,SACI,cAACvP,EAAA,EAAMK,MAAP,UACI,0DAGR,cAACL,EAAA,EAAMM,KAAP,UACI,cAACI,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,qBAA/B,SACI,cAACiD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACI,oBAAInP,MAAO,CAAEC,MAAO,SAApB,4BAIZ,cAACR,EAAA,EAAMS,OAAP,UACI,cAACd,EAAA,EAAD,CAAQE,QAAQ,UAAUC,QAAS,kBAAMvB,KAAzC,wBAOR,eAACyB,EAAA,EAAD,CACIjC,KAAMuQ,EACNrO,OAAQqE,EACRnE,UAAU,EAHd,UAKI,cAACH,EAAA,EAAMI,OAAP,CAAcG,MAAO,CAAEgP,eAAgB,UAAvC,SACI,cAACvP,EAAA,EAAMK,MAAP,UACI,2CAGR,cAACL,EAAA,EAAMM,KAAP,UACI,cAACI,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,qBAA/B,SACI,eAACiD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,EAAGmI,UAAW,UAAvC,UACI,oBAAIlJ,MAAO,CAAEC,MAAO,OAApB,gCACA,wDAIZ,cAACR,EAAA,EAAMS,OAAP,UACI,cAACd,EAAA,EAAD,CAAQE,QAAQ,UAAUC,QAAS,WApInByO,GAAc,GAsI1BjK,KAFJ,2BCXLqL,OAvJf,WACI,IAAMC,EAAOC,iBAAO,GACpB,EAAwB/R,oBAAS,GAAjC,mBAAaE,GAAb,WACA,EAAwBF,mBAAS,IAAjC,mBAAON,EAAP,KAAasS,EAAb,KACA,EAA8BhS,mBAAS,GAAvC,mBAAOiS,EAAP,KAAgBC,EAAhB,KACA,EAAoClS,mBAAS,GAA7C,mBAAOmS,EAAP,KAAmBC,EAAnB,KACA,EAA4BpS,oBAAS,GAArC,mBAAOqS,EAAP,KAAeC,EAAf,KACA,EAA4BtS,mBAAS,GAArC,mBAAOuS,EAAP,KAAeC,EAAf,KACA,EAAkCxS,mBAAS,GAA3C,mBAAOyS,EAAP,KAAkBC,EAAlB,KACA,EAAwB1S,mBAAS,GAAjC,mBAAO2S,EAAP,KAAaC,EAAb,KACA,EAA0B5S,mBAAS,GAAnC,mBAAOmR,EAAP,KAAc0B,EAAd,KACA,EAA8B7S,mBAAS,IAAvC,mBAAO8S,EAAP,KAAgBC,EAAhB,KACA,EAAgC/S,mBAAS,IAAzC,mBAAOgT,EAAP,KAAiBC,EAAjB,KACA,EAA8BjT,oBAAS,GAAvC,mBAAOkT,EAAP,KAAmBC,GAAnB,KAEA1M,qBAAU,WACNnF,IACKC,MAAK,SAAAC,GACF0Q,EAAW1Q,EAAI9B,MACf,IAAM0T,EAAM,EAAI5R,EAAI9B,KACpB8S,EAAUY,SAItB,IAAMC,GAAW,SAAC1G,GACd,GAAI2G,MAAM3G,GACNsG,EAAY,CAAEM,UAAW,cACzBJ,IAAQ,OACL,CACHA,IAAQ,GACR,IAAM9R,EAAQsL,EAASsF,EAEvBS,EAAarR,EAAMqK,QAAQ,IAG3B,IAAM8H,EAAMnS,EAAQ,IACpBuR,EAAQY,GACR,IAAMrC,EAAQsC,WAAWpS,GAASoS,WAAWD,GAC7CX,EAAS1B,EAAMzF,QAAQ,MAKzBD,GAAS,SAACiI,GAEZ,GAAIJ,MAAMI,GACNX,EAAW,CAAEQ,UAAW,cACxBJ,IAAQ,OACL,CACHA,IAAQ,GACRJ,EAAW,IAEXX,EADcsB,EAAMnB,GAGpB,IAAMiB,EAAME,EAAM,IAClBd,EAAQY,GACR,IAAMrC,EAAQsC,WAAWC,GAAOD,WAAWD,GAC3CX,EAAS1B,EAAMzF,QAAQ,MAOzBiI,GAAiB,SAACC,GAAsB,IAAbC,EAAY,uDAAN,EAC/BD,GACAtB,GAAU,GACVe,GAASQ,KAETvB,GAAU,GACV7G,GAAOoI,KAWf,OACI,qCACI,cAACrJ,GAAA,EAAD,CAAM/H,MAAO,CACTyJ,gBAAiB,YACjBxJ,MAAO,kBACPiF,MAAO,OACPiI,WAAY,OACZkE,YAAa,OACbC,aAAc,OACdC,aAAc,SACdC,WAAY,OACZC,YAAa,OACbzQ,aAAc,QAVlB,SAYI,eAACb,EAAA,EAAD,CAAME,SArBG,SAAC7B,GAClBA,EAAEC,iBACFD,EAAEkT,kBACFnC,EAAQ,CAAEb,MAAOlQ,EAAEG,OAAO,GAAGC,MAAOmQ,MAAOvQ,EAAEG,OAAO,GAAGC,MAAOpB,MAAM,IACpEC,GAAQ,IAiBA,UACI,eAAC0C,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,wBAA/B,UACI,cAACvE,EAAA,EAAKI,MAAN,CAAYP,MAAO,CAAEe,UAAW,GAAK2J,QAAM,EAAC9C,GAAI,EAAhD,8BAGA,cAACD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACKS,EACK,cAACzP,EAAA,EAAKM,QAAN,aAAckR,IAAKtC,EAAM3O,KAAK,OAAOkR,SAAU,SAACpT,GAAD,OAAOoS,GAASpS,EAAEG,OAAOC,SAAY2R,IACpF,cAACpQ,EAAA,EAAKM,QAAN,CAAckR,IAAKtC,EAAM3O,KAAK,OAAOmR,QAAS,SAACrT,GAAD,OAAO0S,IAAe,EAAM1S,EAAEG,OAAOC,QAAQA,MAAO8Q,SAIhH,eAACvP,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,oBAA/B,UACI,cAACvE,EAAA,EAAKI,MAAN,CAAYP,MAAO,CAAEe,UAAW,GAAK2J,QAAM,EAAC9C,GAAI,EAAhD,uBAIA,cAACD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACKS,EACK,cAACzP,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOmR,QAAS,SAACrT,GAAD,OAAO0S,IAAe,EAAO1S,EAAEG,OAAOC,QAAQA,MAAOoR,IACxF,cAAC7P,EAAA,EAAKM,QAAN,aAAcC,KAAK,OAAOkR,SAAU,SAACpT,GAAD,OAAOwK,GAAOxK,EAAEG,OAAOC,SAAYyR,MAGjF,cAAClQ,EAAA,EAAKM,QAAQqR,SAAd,CAAuBpR,KAAK,UAA5B,0CAIJ,eAACP,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,yBAA/B,UACI,cAACvE,EAAA,EAAKI,MAAN,CAAYP,MAAO,CAAEe,UAAW,GAAK2J,QAAM,EAAC9C,GAAI,EAAhD,yBAGA,cAACD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACI,cAAChP,EAAA,EAAKM,QAAN,CAAcmE,UAAQ,EAAChG,MAAOsR,SAGtC,eAAC/P,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,qBAA/B,UACI,cAACvE,EAAA,EAAKI,MAAN,CAAYP,MAAO,CAAEe,UAAW,GAAK2J,QAAM,EAAC9C,GAAI,EAAhD,yBAGA,cAACD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACI,cAAChP,EAAA,EAAKM,QAAN,CAAcC,KAAK,SAASkE,UAAQ,EAAChG,MAAQ8P,SAGrD,cAACvO,EAAA,EAAKG,MAAN,CAAYN,MAAO,CAAEe,UAAW,GAAKmH,GAAIR,KAAzC,SACI,cAACC,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,GAAIC,OAAQ,GAAtD,SACKsB,EAAa,KAAO,cAACrR,EAAA,EAAD,CAAQsB,KAAK,SAASnB,QAAS,kBAAM9B,GAAQ,IAA7C,+BAKrC,cAAC,GAAD,CAASR,KAAMA,Q,UC9IrB8U,GAAgBC,aAAW,+GAiBlBC,OAbf,WAGE,OACE,qBAAKjS,MAAO,CAAEkS,SAAU,UAAxB,SACE,eAAC,YAAD,CAAUvE,OAAQoE,GAAlB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,U,gBC0JOI,OAtKf,WACI,IAAMC,EAAa9C,mBACbD,EAAOC,iBAAO,GACZ3J,EAAcG,qBAAWN,IAAzBG,UACR,EAA8BpI,mBAAS,GAAvC,mBAAOiS,EAAP,KAAgBC,EAAhB,KACA,EAAoClS,mBAAS,GAA7C,mBAAOmS,EAAP,KAAmBC,EAAnB,KACA,EAA4BpS,oBAAS,GAArC,mBAAOqS,EAAP,KAAeC,EAAf,KACA,EAA4BtS,mBAAS,GAArC,mBAAOuS,EAAP,KAAeC,EAAf,KACA,EAAkCxS,mBAAS,GAA3C,mBAAOyS,EAAP,KAAkBC,EAAlB,KACA,EAAwB1S,mBAAS,GAAjC,mBAAO2S,EAAP,KAAaC,EAAb,KACA,EAA0B5S,mBAAS,GAAnC,mBAAOmR,EAAP,KAAc0B,EAAd,KACA,EAAkC7S,oBAAS,GAA3C,mBAAOmG,EAAP,KAAkBC,EAAlB,KACA,EAAgDpG,mBAAS,IAAzD,mBAAOqG,EAAP,KAAyBC,EAAzB,KACA,EAAgDtG,mBAAS,UAAzD,mBAAO8U,EAAP,KAAyBC,EAAzB,KAEAtO,qBAAU,WACNnF,IACKC,MAAK,SAAAC,GACF0Q,EAAW1Q,EAAI9B,MACf,IAAM0T,EAAM,EAAI5R,EAAI9B,KACpB8S,EAAUY,SAItB,IAAM7M,EAAqB,SAACZ,EAAS5D,GAC7B4D,IACAS,GAAa,GACbE,EAAoBX,GACpBoP,EAAoBhT,KAStBsR,EAAW,SAAC1G,GACd,IACM6G,EAAM7G,EAAS,IAErB+F,GAHc/F,EAASsF,GAGJvG,QAAQ,IAC3BkH,EAAQY,GACR,IAAMrC,EAAQ6D,SAASrI,GAAUqI,SAASxB,GAC1CX,EAAS1B,IAIP1F,GAAS,SAACiI,GACZ,IAAMrS,EAAQqS,EAAMnB,EACpBH,EAAc/Q,GACd,IAAMmS,EAAMnS,EAAQ,IACpBuR,EAAQY,GACR,IAAMrC,EAAQ6D,SAAS3T,GAAS2T,SAASxB,GACzCX,EAAS1B,IAGPwC,GAAiB,SAACC,GAAsB,IAAbC,EAAY,uDAAN,EAC/BD,GACAtB,GAAU,GACVe,EAASQ,KAETvB,GAAU,GACV7G,GAAOoI,KA4Bf,OACI,cAACnK,EAAA,EAAD,UACI,eAACc,GAAA,EAAD,CAAM1I,UAAU,YAAYW,MAAO,CAACwS,QAAS,IAA7C,UACI,cAACtO,EAAA,EAAD,CACI1G,KAAMkG,EACNpE,QAAS+S,EACTjO,QAAS,WAhErBT,GAAa,GACbE,EAAoB,KA4DZ,SAKI,4BAAID,MAER,eAACzD,EAAA,EAAD,CAAMwR,IAAKS,EAAX,UACI,cAACjS,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,KAA/B,SACI,cAACiD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACI,cAAChP,EAAA,EAAKM,QAAN,CAAcpB,UAAU,WAAWqB,KAAK,OAAOC,YAAY,+BAGnE,cAACR,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,UAA/B,SACI,cAACiD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACI,cAAChP,EAAA,EAAKM,QAAN,CAAcpB,UAAU,WAAWqB,KAAK,OAAOC,YAAY,oBAGnE,cAACR,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,QAA/B,SACI,cAACiD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACI,cAAChP,EAAA,EAAKM,QAAN,CAAcpB,UAAU,WAAWqB,KAAK,OAAOC,YAAY,cAGnE,eAACR,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,SAA/B,UACI,cAACvE,EAAA,EAAKI,MAAN,CAAYP,MAAO,CAAEe,UAAW,GAAK2J,QAAM,EAAC9C,GAAI,EAAhD,8BAGA,cAACD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACKS,EACK,cAACzP,EAAA,EAAKM,QAAN,CAAcpB,UAAU,WAAWsS,IAAKtC,EAAM3O,KAAK,OAAOkR,SAAU,SAACpT,GAAD,OAAOoS,EAASpS,EAAEG,OAAOC,UAC7F,cAACuB,EAAA,EAAKM,QAAN,CAAcpB,UAAU,WAAWsS,IAAKtC,EAAM3O,KAAK,OAAOmR,QAAS,SAACrT,GAAD,OAAO0S,IAAe,EAAM1S,EAAEG,OAAOC,QAAQA,MAAO8Q,SAIrI,eAACvP,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,OAA/B,UACI,cAACvE,EAAA,EAAKI,MAAN,CAAYP,MAAO,CAAEe,UAAW,GAAK2J,QAAM,EAAC9C,GAAI,EAAhD,uBAGA,cAACD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACKS,EACK,cAACzP,EAAA,EAAKM,QAAN,CAAcpB,UAAU,WAAWqB,KAAK,OAAOmR,QAAS,SAACrT,GAAD,OAAO0S,IAAe,EAAO1S,EAAEG,OAAOC,QAAQA,MAAOoR,IAC7G,cAAC7P,EAAA,EAAKM,QAAN,CAAcpB,UAAU,WAAWqB,KAAK,OAAOkR,SAAU,SAACpT,GAAD,OAAOwK,GAAOxK,EAAEG,OAAOC,eAI9F,eAACuB,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,yBAA/B,UACI,cAACvE,EAAA,EAAKI,MAAN,CAAYP,MAAO,CAAEe,UAAW,GAAK2J,QAAM,EAAC9C,GAAI,EAAhD,4BAGA,cAACD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACI,cAAChP,EAAA,EAAKM,QAAN,CAAcmE,UAAQ,EAAChG,MAAOsR,SAGtC,eAAC/P,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAKhD,UAAU,qBAA/B,UACI,cAACvE,EAAA,EAAKI,MAAN,CAAYP,MAAO,CAAEe,UAAW,GAAK2J,QAAM,EAAC9C,GAAI,EAAhD,2BAGA,cAACD,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,EAAGC,OAAQ,GAArD,SACI,cAAChP,EAAA,EAAKM,QAAN,CAAcmE,UAAQ,EAAChG,MAAQ8P,SAGvC,cAACvO,EAAA,EAAKG,MAAN,CAAY4H,GAAIR,KAAhB,SACI,cAACC,GAAA,EAAD,CAAK3H,MAAO,CAAEe,UAAW,GAAK6G,GAAI,CAAEsH,KAAM,GAAIC,OAAQ,UAI9D,cAAC/P,EAAA,EAAD,CAAQsB,KAAK,SAASnB,QA5Ff,SAACf,GAChBA,EAAEC,iBACF,IAAMxB,EAAO,aAAImV,EAAWK,SAASC,QAAO,SAACC,EAAKC,GAE9C,OADAD,EAAIC,EAAMC,aAAa,OAASD,EAAMhU,MAC/B+T,IACR,IACH1V,EAAK4R,KAAOlJ,EACZlD,QAAQC,IAAIzF,GACZwF,QAAQC,IAAIoQ,OAAOC,OAAO9V,GAAMyV,QAAO,SAAC1Q,EAAGgR,GAAJ,OAAUhR,KAAOgR,KAAG,IACtDF,OAAOC,OAAO9V,GAAMyV,QAAO,SAACzP,EAAQrE,GAAT,OAAmBqE,KAAYrE,KAAO,IAItE6D,QAAQC,IAAI0P,EAAWK,SACvBhQ,QAAQC,IAAI0P,EAAWK,QAAQ,GAAG7T,OAClCC,EAAoB5B,GACf6B,MAAK,SAAAC,GACF+E,EAAmB,0BAA2B,cAC/C7E,OAAM,SAAAC,GACL4E,EAAmB5E,EAAIC,SAASlC,KAAKiG,QAAS,cATlDY,EAAmB,2BAA4B,WAkF3C,4B,OCzHDmP,OArCf,WAEI,IAAQtN,EAAcG,qBAAWN,IAAzBG,UACR,EAAwBpI,qBAAxB,mBAAOoL,EAAP,KAAaC,EAAb,KACA,EAAsBrL,qBAAtB,mBAAOsL,EAAP,KAAYC,EAAZ,KAEA9E,qBAAU,WACN+E,OAGJ,IAAMA,EAAiB,WACnBlK,EAAsB8G,GACjB7G,MAAK,SAAAC,GACF6J,EAAQ7J,EAAI9B,MACZ+L,QAINA,EAAS,WACXnK,IACKC,MAAK,SAAAC,GACF,IAAMH,EAAQG,EAAI9B,KAAO0L,EACzBG,EAAOlK,EAAMqK,QAAQ,QAIjC,OACI,cAAChC,EAAA,EAAD,UACI,eAACc,GAAA,EAAD,CAAM1I,UAAU,aAAaoI,MAAI,EAACzH,MAAO,CAAEkJ,UAAW,UAAtD,UACI,4CACA,qBAAIlJ,MAAO,CAACmJ,MAAO,QAAnB,mBAAmCR,EAAnC,OACA,qBAAI3I,MAAO,CAACmJ,MAAO,SAAnB,mBAAoCN,WC3BrCqK,OATf,WACE,OACE,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,Q,OCiGOC,OApGf,WACA,MAA0B5V,mBAAS,GAAnC,mBAAO6V,EAAP,KAAcC,EAAd,KACA,EAAgC9V,oBAAS,GAAzC,mBAAO+V,EAAP,KAAiBC,EAAjB,KACMC,EAAWlE,iBAAO,MACxB,EAAwB/R,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOkW,EAAP,KAAiBC,EAAjB,KAEUhW,EAAc,kBAAMD,GAAQ,IAC5BkW,EAAkB,kBAAMD,GAAY,IAwB1C,OACI,qCAEI,cAAC3L,GAAA,EAAK6L,IAAN,CAAUtU,QAAQ,GAAG+H,IAAI,2BACzB,cAACU,GAAA,EAAD,CAAM1I,UAAU,cAAhB,SACI,eAAC0I,GAAA,EAAKhI,KAAN,WACI,cAACgI,GAAA,EAAKnH,KAAN,8hBAME0S,EAAiH,4BApBhH,WACf,IAAMO,EAAa,WAAKT,EAAQ,IAAMU,OAAO,GACvCC,EAAO,UAAMC,KAAKC,MAAMb,EAAQ,KAChCc,EAAa,WAAIH,EAAU,IAAKD,OAAO,GAE7C,MAAM,GAAN,OAAUI,EAAV,cAA0BL,GAeyGM,KAAzG,cAAC/U,EAAA,EAAD,CAAQE,QAAQ,OAAOU,MAAO,CAACkF,MAAO,OAAQ3F,QAAS,kBAjCjFgU,GAAY,GACZC,EAASf,QAAU2B,aAAY,WAC/Bf,GAAS,SAACD,GAAD,OAAWA,EAAQ,OACzB,UACHvU,IACCC,MAAK,SAAAC,GACFsV,cAAcb,EAASf,SACvBc,GAAY,GACZ9V,GAAQ,GACR4V,EAAS,GACT5Q,QAAQC,IAAI3D,EAAI9B,UAuBM,+BAItB,eAACwC,EAAA,EAAD,CACIjC,KAAMA,EACNkC,OAAQhC,EACRiC,SAAS,SACTC,UAAU,EAJd,UAMI,cAACH,EAAA,EAAMI,OAAP,UACI,cAACJ,EAAA,EAAMK,MAAP,UACI,qDAGR,eAACL,EAAA,EAAMM,KAAP,WACI,oBAAIV,UAAU,WAAd,0BACA,uDAAyB,qDAAzB,kFACA,sDAEJ,cAACI,EAAA,EAAMS,OAAP,UACI,cAACd,EAAA,EAAD,CAAQG,QAAS7B,EAAjB,wBAOR,eAAC+B,EAAA,EAAD,CACIjC,KAAMiW,EACN/T,OAAQiU,EACRhU,SAAS,SACTC,UAAU,EAJd,UAMI,cAACH,EAAA,EAAMI,OAAP,UACI,cAACJ,EAAA,EAAMK,MAAP,UACI,0DAGR,eAACL,EAAA,EAAMM,KAAP,WACI,oBAAIV,UAAU,WAAd,0BACA,oEACA,yEAEJ,cAACI,EAAA,EAAMS,OAAP,UACI,cAACd,EAAA,EAAD,CAAQG,QAASoU,EAAjB,4BClFLW,OARf,WACI,OACI,mCACA,cAAC,GAAD,O,OCgBOpU,OAnBf,WACI,OACI,8BACI,cAAC6H,GAAA,EAAD,CAAM3H,GAAG,SACTf,UAAU,cAAckV,GAAG,OAAOjK,KAAK,QADvC,SAEI,cAACvC,GAAA,EAAKhI,KAAN,UACI,eAACgI,GAAA,EAAKnH,KAAN,qCAEI,mBAAGK,KAAK,iCAAiCtC,OAAO,QAAhD,0BAFJ,KAGI,mBAAGsC,KAAK,iCAAiCtC,OAAO,QAAhD,4BAHJ,KAII,mBAAGsC,KAAK,+BAA+BtC,OAAO,QAA9C,2BAJJ,KAKI,mBAAGsC,KAAM,kCAAkCtC,OAAO,QAAlD,qCCmDT6V,I,yDAlDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAED5O,WAAa,YAAyC,IAAtCvB,EAAqC,EAArCA,SAAUqB,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAExC,EAAK8O,UAAS,SAAA/N,GAAK,MAAK,CACtBrC,SAAUA,EACVqB,UAAWA,EACXC,UAAWA,OAIf,EAAKe,MAAQ,CACXd,WAAY,EAAKA,YAbF,E,qDAiBnB,WAAqB,IAAD,OACb8O,KAAKhO,MAAMf,WACd/G,IACGC,MAAK,SAACC,GACL0D,QAAQC,IAAI3D,GACRA,EAAI9B,KAAK2I,WACX,EAAKC,WAAW9G,EAAI9B,W,oBAM9B,WACE,OACE,cAAC,GAAe2X,SAAhB,CAAyBhW,MAAO+V,KAAKhO,MAArC,SACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,cAACM,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4N,OAAK,EAACC,KAAK,IAAIC,UAAWtM,KACjC,cAAC,IAAD,CAAOoM,OAAK,EAACC,KAAK,WAAWC,UAAWpJ,KACxC,cAAC,IAAD,CAAOkJ,OAAK,EAACC,KAAK,OAAOC,UAAW9C,KACpC,cAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,QAAQC,UAAW7B,KACrC,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,UAAUC,UAAWC,UAG3C,cAAC,GAAD,a,GA5CQC,c,OCVlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFnX,SAASoX,eAAe,W","file":"static/js/main.fbeb2cdd.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport default {\r\n\r\n    googleOauth: function (data) {\r\n        return axios.post(`/api/googleOauth`, data)\r\n    },\r\n    signUp: function (data) {\r\n        return axios.post(`/api/signUp`, data)\r\n    },\r\n    logOut: function(){\r\n        return axios.post(`/api/logout`)\r\n    },\r\n    logIn: function (data) {\r\n        return axios.post(`/api/logIn`, data)\r\n    },\r\n    getAddressBalance: function (data) {\r\n        return axios.get('/api/blockchain/balance/' + data)\r\n    },\r\n    getUserTransactions: function (data) {\r\n        return axios.get('/api/blockchain/transactions/' + data)\r\n    },\r\n    getUsername: function (data) {\r\n        return axios.get('/api/username/' + data)\r\n    },\r\n    sendTransaction: function (data) {\r\n        return axios.post('/api/blockchain/transactions', data)\r\n    },\r\n    getSessions: function (data) {\r\n        return axios.get('/api/sessions')\r\n    },\r\n    checkPrivateKeyMatch: function (data) {\r\n        return axios.delete(`/api/delete/` + data)\r\n    },\r\n    getUSD: function (data) {\r\n        return axios.get('/api/blockchain/coinValue')\r\n    },\r\n    startMining: function () {\r\n        return axios.get('/api/blockchain/mine')\r\n    },\r\n    getValueData: function(data) {\r\n        return axios.get('/api/blockchain/valueData')\r\n    },\r\n    addTransaction: function (data) {\r\n        return axios.post('/api/blockchain/addTransaction', data)\r\n    },\r\n}\r\n\r\n// return axios.post(`http://localhost:3001/api/signUp`, data, {\r\n//     mode: 'cors',\r\n//     credentials: 'include'\r\n//   });\r\n\r\n// return axios({\r\n//     method: 'post', //you can set what request you want to be\r\n//     url: 'http://localhost:3001/api/signUp',\r\n//     data: data,\r\n//     crossDomain: true,\r\n//     headers: {\r\n//         'Access-Control-Allow-Origin': '*',\r\n//         'Accept': 'application/json',\r\n//         'Content-Type': 'application/json'\r\n//     }\r\n// })","import React, { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport API from \"../../utils/api\";\r\nimport \"./style.css\";\r\n\r\nfunction DeleteAccount() {\r\n  // displays Delete Account modal\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  // displays Confirm Delete Account modal\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const handleCloseConfirm = () => setShowConfirm(false);\r\n  const handleShowConfirm = () => setShowConfirm(true);\r\n\r\n  // displays Delete Successful modal\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const handleCloseSuccess = () => {\r\n    setShowSuccess(false);\r\n    document.location.replace('/');\r\n  }\r\n  const handleShowSuccess = () => setShowSuccess(true);\r\n\r\n  // display Delete Unsuccessful modal\r\n  const [showFailure, setShowFailure] = useState(false);\r\n  const handleCloseFailure = () => setShowFailure(false);\r\n  const handleShowFailure = () => setShowFailure(true);\r\n\r\n  // Handle private key and compare\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    const privateKey = e.target[0].value\r\n\r\n    API.checkPrivateKeyMatch(privateKey)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          // User Account successfully deleted\r\n          // console.log(res.data) // debugging\r\n          handleShowSuccess();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 400) {\r\n          // console.log(err.response) // debugging\r\n          handleShowFailure();\r\n        }\r\n      })\r\n    // Close Confirm modal\r\n    handleCloseConfirm();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Delete Account Button on Sidebar */}\r\n      <Button className=\"deletebtn\" variant=\"outline-danger\" onClick={handleShow} block>\r\n        Delete Account\r\n      </Button>\r\n\r\n      {/* Delete Account modal */}\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title >\r\n            <h3>Delete Account</h3>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h5 style={{ color: \"red\" }}>Are you sure you want to delete your account?</h5>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/* Confirmation modal */}\r\n          <Button onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              // handle closing Delete Account modal and opening Confirm modal\r\n              handleClose();\r\n              handleShowConfirm();\r\n            }\r\n            }>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Confirm Delete Account modal */}\r\n      <Modal\r\n        show={showConfirm}\r\n        onHide={handleCloseConfirm}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            <h3>Confirm Delete Account</h3>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Form id=\"privateKey\" onSubmit={(e) => handleSubmit(e)}>\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <Form.Label style={{ fontSize: 14 }}>To delete your account, please enter your private key:</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Private Key\" />\r\n              <Form.Text style={{ color: \"red\", fontWeight: \"bold\" }}>Please note: This cannot be undone!</Form.Text>\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={handleCloseConfirm}>Cancel</Button>\r\n            <Button id=\"confirmBtn\" type=\"submit\">Confirm</Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n\r\n      {/* Successful Account Delete */}\r\n      <Modal\r\n        show={showSuccess}\r\n        onHide={handleCloseSuccess}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            <h3>Your Account has been deleted.</h3>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h5>Thank you for using CryptoCoin!</h5>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleCloseSuccess}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Failure Account Delete */}\r\n      <Modal\r\n        show={showFailure}\r\n        onHide={handleCloseFailure}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            <h3>Your private key does not match our records.</h3>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Please check your private key and try, again.</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleCloseFailure}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DeleteAccount;","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DeleteAccount from \"../DeleteAccount\";\r\nimport \"./style.css\";\r\n\r\nfunction Sidebar() {\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"sidebar-header\" style={{ marginTop: 20, marginBottom: 30, color: \"whitesmoke\" }}>CryptoCoin</h3>\r\n\r\n      <Button\r\n        className=\"sidebutton\"\r\n        href=\"/profile\"\r\n        block\r\n\r\n        variant=\"outline-light\"\r\n      >Profile\r\n        </Button>\r\n      <Button\r\n        className=\"sidebutton\"\r\n        href=\"/buy\"\r\n        block\r\n        variant=\"outline-light\"\r\n      >Buy Coin\r\n        </Button>\r\n      <Button\r\n        className=\"sidebutton\"\r\n        href=\"/send\"\r\n        block\r\n        variant=\"outline-light\"\r\n      >Send\r\n        </Button>\r\n      <Button\r\n        className=\"sidebutton\"\r\n        href=\"/mining\"\r\n        block\r\n        variant=\"outline-light\"\r\n      >Mine Coin\r\n        </Button>\r\n      <DeleteAccount block />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import * as queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport API from \"./api\";\r\n\r\nconst stringifiedParams = queryString.stringify({\r\n  client_id: '232246939902-feprc0hdm5dl57fbkpomoq7cec1lkpce.apps.googleusercontent.com',\r\n  redirect_uri: 'http://localhost:3000/profile',\r\n  scope: [\r\n    'https://www.googleapis.com/auth/userinfo.email',\r\n    'https://www.googleapis.com/auth/userinfo.profile',\r\n  ].join(' '), // space seperated string\r\n  response_type: 'code',\r\n  access_type: 'offline',\r\n  prompt: 'consent',\r\n});\r\n\r\nexport const googleLoginUrl = `https://accounts.google.com/o/oauth2/v2/auth?${stringifiedParams}`;\r\n\r\nconst urlParams = queryString.parse(window.location.search);\r\n\r\nif (urlParams.error) {\r\n  console.log(`An error occurred: ${urlParams.error}`);\r\n} else {\r\n   getAccessTokenFromCode(urlParams.code)\r\n  .then((res)=>{\r\n    getGoogleUserInfo(res)\r\n    .then((userInfo)=>{\r\n        const data = {\r\n            id: userInfo.id,\r\n            email: userInfo.email,\r\n            name: userInfo.name.split(\" \").join(\"\")\r\n        }\r\n        API.googleOauth(data)\r\n        .then((result)=>{\r\n          if(result.data.message){\r\n            console.log(result.data.message);\r\n             privateKey = result.data.message;\r\n\r\n          };\r\n          if(result.data.user){\r\n            window.location.reload();\r\n          }\r\n        });\r\n    })\r\n  });\r\n\r\n}\r\n\r\nasync function getAccessTokenFromCode(code) {\r\n    const { data } = await axios({\r\n      url: `https://oauth2.googleapis.com/token`,\r\n      method: 'post',\r\n      data: {\r\n        client_id: '232246939902-feprc0hdm5dl57fbkpomoq7cec1lkpce.apps.googleusercontent.com',\r\n        client_secret: '0-HuUnGtmzhrsr0IebcTqVgf',\r\n        redirect_uri: 'http://localhost:3000/profile',\r\n        grant_type: 'authorization_code',\r\n        code,\r\n      },\r\n    });\r\n    return data.access_token;\r\n  };\r\n\r\n  async function getGoogleUserInfo(access_token) {\r\n    const { data } = await axios({\r\n      url: 'https://www.googleapis.com/oauth2/v2/userinfo',\r\n      method: 'get',\r\n      headers: {\r\n        Authorization: `Bearer ${access_token}`,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n  export var privateKey = \"\";","import React, { useEffect, useState } from 'react';\r\nimport { Form, Button, Modal, Col, Row, InputGroup } from \"react-bootstrap\";\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport API from \"../../utils/api\";\r\nimport { googleLoginUrl, privateKey } from '../../utils/googleOauth';\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nfunction SignUpForm() {\r\n    const [show, setShow] = useState(false);\r\n    const [copied, setCopied] = useState(false);\r\n    const [private_key, setPrivate] = useState(\"\");\r\n\r\n    // Alert states and functions\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [showAlertMessage, setShowAlertMessage] = useState(\"\");\r\n    const handleCloseAlert = () => {\r\n        setShowAlert(false);\r\n        setShowAlertMessage(\"\");\r\n    }\r\n    const handleAlertMessage = (message) => {\r\n        if (message) {\r\n            setShowAlert(true);\r\n            setShowAlertMessage(message);\r\n        }\r\n    }\r\n    const handleShow = () => setShow(true);\r\n    \r\n    useEffect(() => {\r\n        if (privateKey) {\r\n\r\n            setPrivate(privateKey);\r\n            handleShow();\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    const handleClose = () => {\r\n        if (copied === true) {\r\n            setShow(false);\r\n            document.location.replace(\"/profile\");\r\n            setPrivate(\"\");\r\n        } else {\r\n            alert(\"Please copy your Private Key\");\r\n        }\r\n    }\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(private_key);\r\n        setCopied(true);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const submitData = {\r\n            username: e.target[1].value,\r\n            password: e.target[2].value,\r\n            confirm_password: e.target[3].value,\r\n            email: e.target[0].value,\r\n            public_key: \"123456788999\"\r\n        }\r\n        API.signUp(submitData)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    setPrivate(res.data.message);\r\n                    handleShow();\r\n                };\r\n            })\r\n            .catch((err) => {\r\n                switch (err.response.data.message) {\r\n                    case \"Your Username should be at least 6 characters.\":\r\n                        handleAlertMessage(err.response.data.message);\r\n                        break;\r\n                    case \"Your Password should be at least 6 characters.\":\r\n                        handleAlertMessage(err.response.data.message);\r\n                        break;\r\n                    case \"Your password does not match.\":\r\n                        handleAlertMessage(err.response.data.message);\r\n                        break;\r\n                    case \"Email already in use.\":\r\n                        handleAlertMessage(err.response.data.message);\r\n                        break;\r\n                    case \"Username already in use.\":\r\n                        handleAlertMessage(err.response.data.message);\r\n                        break;\r\n                    // edge case server error\r\n                    case \"MongoDB error\":\r\n                        handleAlertMessage(\"Oops something went wrong. Please try again later.\");\r\n                        break;\r\n                    default:\r\n                        handleAlertMessage(\"Please try, again!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Alert\r\n                show={showAlert}\r\n                variant=\"warning\"\r\n                dismissible=\"true\"\r\n                onClose={() => { handleCloseAlert() }}\r\n            >\r\n                <p>{showAlertMessage}</p>\r\n            </Alert>\r\n\r\n            <div className=\"sidebar-header\" style={{ marginTop: 20, marginBottom: 30, color: \"whitesmoke\" }}>\r\n                <h3>Sign-up</h3>\r\n            </div>\r\n\r\n            <Form onSubmit={(e) => handleSubmit(e)}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicUsername\">\r\n                    <Form.Control type=\"text\" placeholder=\"Enter username\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Control type=\"password\" placeholder=\"Pasword\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicConfirm\">\r\n                    <Form.Control type=\"password\" placeholder=\"Confirm password\" />\r\n                </Form.Group>\r\n                <Button\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    className=\"sidebutton\"\r\n                    block\r\n                    variant=\"outline-light\"\r\n                >Sign-Up\r\n                </Button>\r\n            </Form>\r\n\r\n            <div>\r\n                <h3>--- Or ---</h3>\r\n            </div>\r\n\r\n            {/* Need to add a type for button */}\r\n            <Button\r\n                href={googleLoginUrl}\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                className=\"sidebutton\"\r\n                block\r\n                variant=\"outline-light\"\r\n            >Sign-Up with Google\r\n                </Button>\r\n\r\n\r\n            <Modal\r\n                copied={copied}\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        <h3>Thank you for Signing Up!</h3>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h5>Please keep your private key safe. This is the only time we will be showing your private key.</h5>\r\n                    <Form.Group controlId=\"formPlaintextTotal\">\r\n                        <Form.Label><p id=\"privateKey\">Private Key:</p></Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control className=\"something\" readOnly value={private_key} />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"outline-secondary\" onClick={copyToClipboard}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clipboard\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\" />\r\n                                    <path d=\"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\" />\r\n                                </svg>\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SignUpForm;","import React from 'react';\r\n\r\nconst SessionContext = React.createContext({\r\n    username: \"\",\r\n    publicKey: \"\",\r\n    logged_in: false,\r\n    setSession: () => {}\r\n});\r\n\r\nexport default SessionContext;","import React, { useState, useContext } from 'react';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport API from \"../../utils/api\";\r\nimport SessionContext from \"../../utils/sessionContext\";\r\nimport { googleLoginUrl } from '../../utils/googleOauth';\r\n\r\nfunction SignUpForm() {\r\n    const { setSession } = useContext(SessionContext);\r\n\r\n    // Alert states and functions\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [showAlertMessage, setShowAlertMessage] = useState(\"\");\r\n    const handleCloseAlert = () => {\r\n        setShowAlert(false);\r\n        setShowAlertMessage(\"\");\r\n    }\r\n    const handleAlertMessage = (message) => {\r\n        if(message) {\r\n            setShowAlert(true);\r\n            setShowAlertMessage(message);\r\n        }\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const submitData = {\r\n            username: e.target[0].value,\r\n            password: e.target[1].value,\r\n        }\r\n        API.logIn(submitData)\r\n        .then((res) => {\r\n            console.log(res) //use to debug\r\n            var username = res.data.user[0].username; \r\n            var publicKey = res.data.user[0].public_key;\r\n            var logged_in = true;\r\n            setSession({username, publicKey, logged_in});\r\n            document.location.replace(\"/\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.response)\r\n            // console.log(err.response.data.message); //use to debug\r\n            switch(err.response.data.message) {\r\n                case \"Server Error, Please try Again.\":\r\n                    handleAlertMessage(\"Oops something went wrong. Please try again later.\");\r\n                    break;\r\n                default:\r\n                    handleAlertMessage(\"Please check your username or password\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n        return (\r\n            <>\r\n                <Alert\r\n                    show={showAlert}\r\n                    variant=\"warning\"\r\n                    dismissible=\"true\"\r\n                    onClose={() => {handleCloseAlert()}}\r\n                >\r\n                    <p>{showAlertMessage}</p>\r\n                </Alert>\r\n\r\n                <div className=\"sidebar-header\" style={{ marginTop: 20, marginBottom: 30, color: \"whitesmoke\" }}>\r\n                    <h3>Login</h3>\r\n                </div>\r\n\r\n                <Form onSubmit={(e) => handleSubmit(e)}>\r\n                    <Form.Group controlId=\"formBasicUsername\">\r\n                        <Form.Control type=\"text\" placeholder=\"Enter username or email\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control type=\"password\" placeholder=\"Pasword\" />\r\n                    </Form.Group>\r\n                    <Button \r\n                        type=\"submit\"\r\n                        className=\"sidebutton\"\r\n                        block\r\n                        variant=\"outline-light\"\r\n                    >Login\r\n                    </Button>\r\n                </Form>\r\n\r\n                <div>\r\n                    <h3>--- Or ---</h3>\r\n                </div>\r\n                \r\n                {/* Need to add a type for button */}\r\n                <Button\r\n                href={googleLoginUrl}\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                className=\"sidebutton\"\r\n                block\r\n                variant=\"outline-light\"\r\n            >Login with Google\r\n                </Button>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SignUpForm;","import React, { useContext, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Navbar, Button, Nav } from \"react-bootstrap\";\r\nimport Sidenav from \"sidenavjs\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport SignUpForm from \"../SignUp\";\r\nimport LoginForm from \"../Login\";\r\nimport \"./style.css\";\r\nimport SessionContext from '../../utils/sessionContext';\r\nimport API from \"../../utils/api\";\r\nimport { privateKey } from '../../utils/googleOauth';\r\n\r\nfunction Navigation() {\r\n    const { logged_in } = useContext(SessionContext);\r\n    const [sidebarOpen, setSidebarOpen] = useState(false);\r\n    const [loginComponent, setLoginComponent] = useState(\"menu\");\r\n\r\n    const handleLogout = () => {\r\n        API.logOut()\r\n            .then(res => {\r\n                console.log(res);\r\n                document.location.replace('/');\r\n            })\r\n    }\r\n\r\n    const onSetSidebarOpen = (open) => {\r\n        setSidebarOpen(open)\r\n    }\r\n    setTimeout(() => {\r\n        if (privateKey) {\r\n            onSetSidebarOpen(true)\r\n            setSidebarState(\"signUp\")\r\n        }\r\n    }, 2000)\r\n    const setSidebarState = (buttons) => {\r\n        setLoginComponent(buttons)\r\n    }\r\n    if (logged_in) {\r\n        return (\r\n            <SessionContext.Consumer>\r\n                {(state) => (\r\n                    <>\r\n                        <Sidenav\r\n                            open={sidebarOpen}\r\n                            onSetOpen={onSetSidebarOpen}\r\n                            sidenav={\r\n                                loginComponent === \"menu\" ? <Sidebar /> : loginComponent === \"signUp\" ? <SignUpForm /> : <LoginForm {...state} />\r\n                            }\r\n                        >\r\n                            <Navbar className=\"container-fluid mb-2 navigation\">\r\n                                <Container>\r\n                                    <Nav.Item>\r\n                                        <Link className=\"navbar-brand\" to=\"/\">\r\n                                            <img id=\"logo\" src=\"./assets/cryptonite-logo-2.PNG\" alt=\"brand-logo\"/>\r\n                                Cryptonite\r\n                                </Link>\r\n                                    </Nav.Item>\r\n                                    <Nav className=\"ml-auto\">\r\n                                        <Nav.Item className=\"d-flex\">\r\n                                            <Button\r\n                                                id=\"logout\"\r\n                                                variant=\"outline-light\"\r\n                                                type=\"button\"\r\n                                                onClick={handleLogout}>Logout\r\n                                            </Button>\r\n                                            <Button\r\n                                                id=\"menu\"\r\n                                                className=\"btn hamburger\"\r\n                                                variant=\"outline-light\"\r\n                                                type=\"button\"\r\n                                                onClick={() => {\r\n                                                    onSetSidebarOpen(true)\r\n                                                    setSidebarState(\"menu\")\r\n                                            }}>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"33\" height=\"33\" fill=\"currentColor\" className=\"bi bi-list hamburger\" viewBox=\"0 0 16 16\">\r\n                                                    <path fillRule=\"evenodd\" d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\" />\r\n                                                </svg>\r\n                                            </Button>\r\n                                        </Nav.Item>\r\n                                    </Nav>\r\n                                </Container>\r\n                            </Navbar>\r\n                        </Sidenav>\r\n                    </>\r\n                )}\r\n            </SessionContext.Consumer>\r\n        )\r\n\r\n    }\r\n    return (\r\n        <SessionContext.Consumer>\r\n            {(state) => (\r\n                <>\r\n                    <Sidenav\r\n                        open={sidebarOpen}\r\n                        onSetOpen={onSetSidebarOpen}\r\n                        sidenav={\r\n                            loginComponent === \"menu\" ? <Sidebar /> : loginComponent === \"signUp\" ? <SignUpForm /> : <LoginForm {...state} />\r\n                        }\r\n                    >\r\n                        <Navbar className=\"container-fluid mb-2 mb-2 navigation\">\r\n                            <Container>\r\n                                <Nav.Item>\r\n                                    <Link className=\"navbar-brand\" to=\"/\">\r\n                                        <img id=\"logo\" src=\"./assets/cryptonite-logo-2.PNG\" alt=\"brand-logo\" />\r\n                                    Cryptonite\r\n                                    </Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"d-flex\">\r\n                                    <Button\r\n                                        id=\"signup\"\r\n                                        type=\"button\"\r\n                                        variant=\"outline-light\"\r\n                                        onClick={() => {\r\n                                            onSetSidebarOpen(true)\r\n                                            setSidebarState(\"signUp\")\r\n                                    }}>Sign-up\r\n                                    </Button>\r\n                                    <Button\r\n                                        id=\"login\"\r\n                                        type=\"button\"\r\n                                        variant=\"outline-light\"\r\n                                        onClick={() => {\r\n                                            onSetSidebarOpen(true)\r\n                                            setSidebarState(\"login\")\r\n                                        }}>Login\r\n                                </Button>\r\n                                </Nav.Item>\r\n                            </Container>\r\n                        </Navbar>\r\n                    </Sidenav>\r\n                </>\r\n            )}\r\n        </SessionContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { Accordion, Card, Row, Col } from \"react-bootstrap\";\r\nimport { isMobile } from 'react-device-detect';\r\nimport \"./style.css\";\r\n\r\n\r\nconst title = \"About\";\r\n\r\nconst body = (\r\n  <Row>\r\n    <Col md={8} className=\"cardBody\"> <h1>{title}</h1>\r\n      <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\r\n      when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap\r\n      into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing\r\n     Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n    </Col>\r\n    <Col md={4}><img src={'./assets/images/coin.jpeg'} style={{width: 400, height: 275}}className=\"image round\" alt='Coin' /></Col>\r\n  </Row>\r\n);\r\n\r\nfunction About() {\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <Card className=\"aboutCard\">\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n          {title}\r\n        </Accordion.Toggle>\r\n\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <Card.Body>\r\n            {body}\r\n          </Card.Body>\r\n\r\n        </Accordion.Collapse>\r\n\r\n      </Card>\r\n    )\r\n  } else {\r\n    return (\r\n      <Card className=\"desktopCard\">\r\n        <Card.Body>\r\n          {body}\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { Accordion, Card, Row, Col } from \"react-bootstrap\";\r\nimport { isMobile } from 'react-device-detect';\r\nimport \"./style.css\";\r\n\r\nconst title = \"Learn More\";\r\n\r\nconst body = (\r\n  <Row>\r\n    <Col md={6}><img src={'https://cdn.pixabay.com/photo/2018/01/17/20/22/analytics-3088958_960_720.jpg'} className=\"image\" alt='Learn More' /></Col>\r\n    <Col md={6} className=\"cardBody\" id=\"learnCard\"> <h1>{title}</h1>\r\n      <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\r\n      when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap\r\n      into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing\r\n     Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n    </Col>\r\n\r\n  </Row>\r\n);\r\n\r\nfunction LearnMore() {\r\n  if (isMobile) {\r\n    return (\r\n      <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n          {title}\r\n        </Accordion.Toggle>\r\n\r\n        <Accordion.Collapse eventKey=\"1\">\r\n          <Card.Body>\r\n            {body}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n\r\n      </Card>\r\n    )\r\n  } else {\r\n    return (\r\n      <Card className=\"desktopCard\">\r\n          <Card.Body>\r\n            {body}\r\n          </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LearnMore;","import React from \"react\";\r\nimport { Accordion, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { isMobile } from 'react-device-detect';\r\n\r\n\r\nconst title = \"Get Started\";\r\n\r\nconst body = (\r\n  <Row>\r\n    <Col md={7} className=\"cardBody\"> <h1>{title}</h1>\r\n      <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\r\n      when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap\r\n      into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing\r\n     Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n      <Button variant=\"dark\">Sign Up !</Button>\r\n    </Col>\r\n    <Col md={5}><img src={'https://cdn.pixabay.com/photo/2016/04/20/08/21/entrepreneur-1340649_960_720.jpg'} className=\"image\" alt='Started' /></Col>\r\n  </Row>\r\n);\r\n\r\nfunction GetStarted() {\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <Card>\r\n        <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n          {title}\r\n        </Accordion.Toggle>\r\n\r\n        <Accordion.Collapse eventKey=\"2\">\r\n          <Card.Body>\r\n                {body}\r\n          </Card.Body>\r\n\r\n        </Accordion.Collapse>\r\n\r\n      </Card>\r\n    )\r\n  } else {\r\n    return (\r\n      <Card className=\"desktopCard\">\r\n          <Card.Body>\r\n                {body}\r\n          </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GetStarted;","import React from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport About from \"../About\";\r\nimport LearnMore from \"../LearnMore\";\r\nimport GetStarted from \"../GetStarted\";\r\n\r\nfunction Accords() {\r\n\r\n  \r\n  return (\r\n\r\n    <>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <About/>\r\n        <LearnMore/>\r\n        <GetStarted/>\r\n      </Accordion>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default Accords;","import React from \"react\";\r\nimport Accords from \"../components/Accords\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <Accords />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container, Card, InputGroup, FormControl, Button, Form } from 'react-bootstrap';\r\nimport SessionContext from \"../../utils/sessionContext\";\r\nimport API from \"../../utils/api\";\r\nimport \"./style.css\";\r\n\r\n// Passprops to the wallet coins in order to render the amount associated to the public key.\r\n\r\n\r\nfunction WalletCoins() {\r\n\r\n    const { publicKey, username } = useContext(SessionContext);\r\n    const [coin, setCoin] = useState();\r\n    const [USD, setUSD] = useState();\r\n\r\n    useEffect(() => {\r\n        getUserBalance();\r\n    })\r\n\r\n    const getUserBalance = () => {\r\n        API.getAddressBalance(publicKey)\r\n            .then(res => {\r\n                setCoin(res.data)\r\n                getUSD();\r\n            })\r\n    }\r\n    const getUSD = () => {\r\n        API.getUSD()\r\n            .then(res => {\r\n                const value = res.data * coin;\r\n                setUSD(value.toFixed(2));\r\n            })\r\n    }\r\n    return (\r\n        <Container>\r\n            <Card body className=\"walletCoin\" style={{ textAlign: 'center' }}>\r\n                <h3>Welcome, {username}!</h3>\r\n                <h3 style={{float: 'left'}}>Coin: {coin}</h3> <h3 style={{float: 'right'}}> USD: ${USD}</h3>\r\n            </Card>\r\n            <Card body className=\"walletCoin\" style={{ textAlign: 'center' }}>\r\n                <Form.Label><h3>Public Key:</h3></Form.Label>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        readOnly\r\n                        placeholder={publicKey}\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button variant=\"outline-secondary\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clipboard\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\" />\r\n                            <path d=\"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\" />\r\n                        </svg></Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default WalletCoins;","import React, { useContext, useState, useEffect } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport SessionContext from '../../utils/sessionContext';\r\nimport API from \"../../utils/api\";\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport \"./style.css\";\r\n\r\n// Table is able to be styled. This is generic boostrap styling for MVP.\r\n\r\n// THIS IS PLACEHOLDER DATA. WE NEED TO PASS AN ARRAY OF OBJECTS WITH THE VALUES\r\n// CHANGE THE KEYS ACCORDINGLY TO WHAT THE BLOCKCHAIN PROVIDES\r\n// {\r\n//   \"fromAddress\": \"From\",\r\n//   \"toAddress\": \"Recipient\",\r\n//   \"timestamp\": \"Timestamp\",\r\n//   \"amount\": \"Amount\",\r\n//   \"label\": \"whatever\"\r\n// }\r\n\r\nfunction TransHist() {\r\n\r\n  const { publicKey, username } = useContext(SessionContext);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const headerSortingStyle = { backgroundColor: '#353535', color: 'white' };\r\n  // ^^^ background color of column when clicked. \r\n\r\n\r\n  const timeConverter = (time) => {\r\n    const unixTime = time;\r\n    const dateObject = new Date(unixTime);\r\n    const dateFormat = dateObject.toLocaleString();\r\n    return dateFormat;\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"hello\");\r\n    API.getUserTransactions(publicKey)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        let count = 0;\r\n        res.data.forEach(data => {\r\n          data.key = count;\r\n          data.timestamp = timeConverter(data.timestamp);\r\n          if (data.fromAddress === publicKey) {\r\n            data.fromAddress = username;\r\n            data.amount = \" - \" + data.amount;\r\n            API.getUsername(data.toAddress)\r\n              .then(result => {\r\n                console.log(result.data.message);\r\n                data.toAddress = result.data.message;\r\n              });\r\n          };\r\n          if (data.toAddress === publicKey) {\r\n            data.toAddress = username;\r\n            data.amount = \" + \" + data.amount;\r\n            if (data.fromAddress) {\r\n              API.getUsername(data.fromAddress)\r\n                .then(result => {\r\n                  console.log(result.data.message);\r\n                  data.fromAddress = result.data.message;\r\n                })\r\n            } else {\r\n              data.fromAddress = \"System\";\r\n            }\r\n          };\r\n          count++;\r\n        });\r\n        console.log(res.data);\r\n        setTimeout(() => {\r\n          setTransactions(res.data);\r\n        }, 2000);\r\n      }\r\n      )\r\n  }, [publicKey, username]);\r\n\r\n\r\n  const columns = [{\r\n    dataField: 'fromAddress',\r\n    text: 'From',\r\n    sort: true,\r\n    headerSortingStyle,\r\n    sortCaret: (order, column) => {\r\n      if (!order) return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i><i className=\"fas fa-sort-down\"></i></span>);\r\n      else if (order === 'asc') return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i><i className=\"fas fa-sort-down active\"></i></span>);\r\n      else if (order === 'desc') return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up active\"></i><i className=\"fas fa-sort-down\"></i></span>);\r\n      return null;\r\n    }\r\n  }, {\r\n    dataField: 'toAddress',\r\n    text: 'Recipient',\r\n    sort: true,\r\n    headerSortingStyle,\r\n    sortCaret: (order, column) => {\r\n      if (!order) return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i><i className=\"fas fa-sort-down\"></i></span>);\r\n      else if (order === 'asc') return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i><i className=\"fas fa-sort-down active\"></i></span>);\r\n      else if (order === 'desc') return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up active\"></i><i className=\"fas fa-sort-down\"></i></span>);\r\n      return null;\r\n    }\r\n  }, {\r\n    dataField: 'amount',\r\n    text: 'Amount',\r\n    sort: true,\r\n    headerSortingStyle,\r\n    sortCaret: (order, column) => {\r\n      if (!order) return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i><i className=\"fas fa-sort-down\"></i></span>);\r\n      else if (order === 'asc') return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i><i className=\"fas fa-sort-down active\"></i></span>);\r\n      else if (order === 'desc') return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up active\"></i><i className=\"fas fa-sort-down\"></i></span>);\r\n      return null;\r\n    }\r\n  }, {\r\n    dataField: 'timestamp',\r\n    text: 'Timestamp',\r\n    sort: true,\r\n    headerSortingStyle,\r\n    sortCaret: (order, column) => {\r\n      if (!order) return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i><i className=\"fas fa-sort-down\"></i></span>);\r\n      else if (order === 'asc') return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up\"></i><i className=\"fas fa-sort-down active\"></i></span>);\r\n      else if (order === 'desc') return (<span>&nbsp;&nbsp;<i className=\"fas fa-sort-up active\"></i><i className=\"fas fa-sort-down\"></i></span>);\r\n      return null;\r\n    }\r\n  }\r\n  ];\r\n\r\n  const expandRow = {\r\n    renderer: row => (\r\n      <div>\r\n        <p>{row.label}</p>\r\n      </div>\r\n    ),\r\n    showExpandColumn: true,\r\n    expandHeaderColumnRenderer: ({ isAnyExpands }) => {\r\n      if (isAnyExpands) {\r\n        return <b>-</b>;\r\n      }\r\n      return <b>+</b>;\r\n    },\r\n    expandColumnRenderer: ({ expanded }) => {\r\n      if (expanded) {\r\n        return (\r\n          <b>-</b>\r\n        );\r\n      }\r\n      return (\r\n        <b>...</b>\r\n      );\r\n    }\r\n  };\r\n  console.log(transactions);\r\n  if (transactions.length === 0) {\r\n    return (\r\n      <Container>\r\n        <Card body style={{ textAlign: 'center', backgroundColor: '#D9D9D9', color: '#353535' }}><h3>You have no Transactions yet!</h3></Card>\r\n      </Container>\r\n    )\r\n  } else {\r\n    return (\r\n      <>\r\n        <Container>\r\n          <BootstrapTable\r\n            className=\"table\"\r\n            style={{ textAlign: 'center' }}\r\n            keyField=\"key\"  \r\n            data={transactions}\r\n            columns={columns}\r\n            expandRow={expandRow}\r\n            pagination={paginationFactory()}\r\n            striped\r\n            hover\r\n            condensed\r\n          />\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TransHist;","import React from \"react\";\r\nimport WalletCoins from \"../components/WalletCoins\";\r\nimport TransHist from \"../components/TransHist\";\r\n// import BuySendBtn from \"../components/BuySendBtn\";\r\n\r\n\r\n\r\nfunction Profile() {\r\n  return (\r\n    <>\r\n      <WalletCoins />\r\n      <TransHist />\r\n      {/* <BuySendBtn /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React, { useEffect, useState } from 'react';\r\nimport { Card } from \"react-bootstrap\";\r\nimport API from '../../utils/api';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { DateTime } from 'luxon';\r\nimport \"./style.css\";\r\n\r\nfunction CoinGraph() {\r\n    const [xAxis, setxAxis] = useState([]);\r\n    const [yAxis, setYAxis] = useState([]);\r\n    const [totalCoins, setTotalCoins] = useState([]);\r\n\r\n    useEffect(() => {\r\n        API.getValueData()\r\n            .then((result) => {\r\n                console.log(result);\r\n                let label = [];\r\n                let dataTemp = [];\r\n                for (var i = 0; i < result.data.length; i++) {\r\n                    // looping through results and getting 'date' value and pushing it into 'label' array\r\n                    label.push(DateTime.fromMillis(result.data[i].date).toLocaleString({ month: 'short', day: 'numeric' }))\r\n                    // looping through results and getting 'usd_value' and pushing it into 'dataTemp' array\r\n                    dataTemp.push(result.data[i].usd_value)\r\n                }\r\n                setxAxis(label);\r\n                setYAxis(dataTemp);\r\n                setTotalCoins(result.data[result.data.length - 1].total_coins)\r\n            });\r\n    }, []);\r\n\r\n    const data = {\r\n        labels: xAxis,\r\n        datasets: [\r\n            {\r\n                label: 'USD $',\r\n                data: yAxis,\r\n                fill: true,\r\n                backgroundColor: 'rgba(60, 110, 113, 1)',\r\n                pointBackgroundColor: 'rgb(53, 53, 53)',\r\n                borderColor: 'rgba(52, 94, 97, 1)',\r\n                yAxisID: 'y'\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            y: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"px-3 chart\" style={{\r\n                backgroundColor: 'gainsboro',\r\n                color: 'rgb(53, 53, 53)',\r\n                paddingBottom: '20px',\r\n                marginTop: '10px'\r\n            }}>\r\n                <div className='header'>\r\n                    <h3>Total coins in circulation: {totalCoins}</h3>\r\n                </div>\r\n\r\n                <h6 className='title' style={{ \r\n                    textAlign: 'center',\r\n                    paddingTop: '10px',\r\n                    fontSize: '20px'\r\n                }}>History of Cryptonite</h6>\r\n                <Line data={data} options={options} />\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CoinGraph;","import React, { useState, useEffect, useContext } from 'react';\r\nimport './style.css';\r\nimport { Form, Button, Modal, Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport API from \"../../utils/api\";\r\nimport SessionContext from \"../../utils/sessionContext\";\r\nimport {\r\n    useStripe,\r\n    useElements,\r\n    CardNumberElement,\r\n    CardExpiryElement,\r\n    CardCvcElement\r\n} from '@stripe/react-stripe-js';\r\n\r\nconst PayInfo = (info) => {\r\n\r\n    const { publicKey } = useContext(SessionContext);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    // displays payinfo modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        info.data.show = false;\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n    // displays successful transaction modal\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const handleCloseSuccess = () => setShowSuccess(false);\r\n    const handleShowSuccess = () => setShowSuccess(true);\r\n\r\n    // displays failed transaction modal\r\n    const [showFailed, setShowFailed] = useState(false);\r\n    const handleCloseFailed = () => setShowFailed(false);\r\n    const handleShowFailed = () => setShowFailed(true);\r\n\r\n    useEffect(() => {\r\n        if (info.data.show === true) {\r\n            setShow(true);\r\n        }\r\n    }, [info.data.show]);\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardNumberElement, CardExpiryElement, CardCvcElement),\r\n        });\r\n        if (!error) {\r\n            const { id } = paymentMethod;\r\n            try {\r\n                await axios.post(\"/api/stripe/charge\", { id, amount: info.data.total * 100 })\r\n                    .then((_) => {\r\n                        const trans = {\r\n                            from: \"046dde2f0162157620e0b6a2347cb5522148f35809c871bad9cfa3843b4f40f48c4fe043ea8fee6b3e07234a044138afcfc240a0854e5eeb2d587686dc4a239bcb\",\r\n                            private: \"8b13559111bb98f7e34d6ffa55784336c829d6ae969680ee6a49b3e6408f96c0\",\r\n                            to: publicKey,\r\n                            label: \"Bought for: $\" + info.data.total,\r\n                            amount: info.data.coins\r\n                        }\r\n                        API.addTransaction(trans)\r\n                            .then(res => {\r\n                                API.sendTransaction(trans)\r\n                                    .then(res => {\r\n                                        handleClose();\r\n                                        handleShowSuccess();\r\n                                    }).catch(err => {\r\n                                        console.log(err);\r\n                                        handleClose();\r\n                                        handleShowFailed();\r\n                                    });\r\n                            }).catch(err => {\r\n                                console.log(err);\r\n                                handleClose();\r\n                                handleShowFailed();\r\n                            });\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                        handleClose();\r\n                        handleShowFailed();\r\n                    });\r\n\r\n\r\n            } catch (error) {\r\n                handleClose();\r\n                handleShowFailed();\r\n                console.log(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* payment modal */}\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                keyboard={false}>\r\n                <Modal.Header style={{ justifyContent: \"center\" }} >\r\n                    <Modal.Title>\r\n                        <h3>Payment Information</h3>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"input-box\">\r\n                            <CardNumberElement />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"input-box\">\r\n                            <CardExpiryElement />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"input-box\">\r\n                            <CardCvcElement />\r\n                        </Form.Group>\r\n                        <Button style={{ width: '50%', float: 'right' }} type=\"submit\" disabled={!stripe}> Submit Payment</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* success modal */}\r\n            <Modal\r\n                show={showSuccess}\r\n                onHide={handleCloseSuccess}\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header style={{ justifyContent: \"center\" }}>\r\n                    <Modal.Title>\r\n                        <h3>Transaction Complete</h3>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextTotal\">\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 3, offset: 4 }}>\r\n                            <h4 style={{ color: \"green\" }}>Success!</h4>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={() => handleCloseSuccess()}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* fail modal*/}\r\n            <Modal\r\n                show={showFailed}\r\n                onHide={handleShow}\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header style={{ justifyContent: \"center\" }}>\r\n                    <Modal.Title>\r\n                        <h3>Error</h3>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextTotal\">\r\n                        <Col style={{ marginTop: 5, textAlign: \"center\" }} >\r\n                            <h4 style={{ color: \"red\" }}>Transaction Failed</h4>\r\n                            <h5>Amount too low.</h5>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        handleCloseFailed();\r\n                        handleShow();\r\n                    }\r\n                    }>\r\n                        Back\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default PayInfo;","import React, { useState, useEffect, useRef } from 'react';\r\nimport PayInfo from '../PayInfo';\r\nimport { Form, Col, Row, Button, Card } from 'react-bootstrap';\r\nimport API from \"../../utils/api\";\r\n\r\nfunction BuyForm() {\r\n    const cost = useRef(0);\r\n    const [show, setShow] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [coinVal, setCoinVal] = useState(0);\r\n    const [coinAmount, setCoinAmount] = useState(0);\r\n    const [toggle, setToggle] = useState(false);\r\n    const [usdVal, setUSDVal] = useState(0);\r\n    const [usdAmount, setUSDAmount] = useState(0);\r\n    const [fees, setFees] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n    const [invalid, setInvalid] = useState({});\r\n    const [invalid2, setInvalid2] = useState({});\r\n    const [hideButton, setHide] = useState(false);\r\n\r\n    useEffect(() => {\r\n        API.getUSD()\r\n            .then(res => {\r\n                setCoinVal(res.data);\r\n                const div = 1 / res.data;\r\n                setUSDVal(div);\r\n            })\r\n    })\r\n    //Input is coins\r\n    const getValue = (amount) => {\r\n        if (isNaN(amount)) {\r\n            setInvalid2({ isInvalid: \"isInvalid\" })\r\n            setHide(true);\r\n        } else {\r\n            setHide(false);\r\n            const value = amount * coinVal;\r\n\r\n            setUSDAmount(value.toFixed(2));\r\n\r\n\r\n            const fee = value / 100;\r\n            setFees(fee);\r\n            const total = parseFloat(value) + parseFloat(fee);\r\n            setTotal(total.toFixed(2));\r\n        }\r\n    }\r\n\r\n    //Input is USD\r\n    const getUSD = (usd) => {\r\n\r\n        if (isNaN(usd)) {\r\n            setInvalid({ isInvalid: \"isInvalid\" })\r\n            setHide(true);\r\n        } else {\r\n            setHide(false);\r\n            setInvalid({})\r\n            const value = usd * usdVal;\r\n            setCoinAmount(value);\r\n\r\n            const fee = usd / 100;\r\n            setFees(fee);\r\n            const total = parseFloat(usd) + parseFloat(fee);\r\n            setTotal(total.toFixed(2));\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const toggleListener = (boolean, val = 0) => {\r\n        if (boolean) {\r\n            setToggle(true)\r\n            getValue(val);\r\n        } else {\r\n            setToggle(false)\r\n            getUSD(val);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setData({ total: e.target[3].value, coins: e.target[0].value, show: true })\r\n        setShow(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card style={{\r\n                backgroundColor: 'gainsboro',\r\n                color: 'rgb(53, 53, 53)',\r\n                width: '100%',\r\n                paddingTop: '45px',\r\n                paddingLeft: '55px',\r\n                paddingRight: '55px',\r\n                alignContent: 'center',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                marginBottom: '20px',\r\n            }}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                        <Form.Label style={{ marginTop: 5 }} column md={4}>\r\n                            Amount of Coins:\r\n                        </Form.Label>\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\r\n                            {toggle\r\n                                ? <Form.Control ref={cost} type=\"text\" onChange={(e) => getValue(e.target.value)} {...invalid2}/>\r\n                                : <Form.Control ref={cost} type=\"text\" onFocus={(e) => toggleListener(true, e.target.value)} value={coinAmount} />\r\n                            }\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextCost\">\r\n                        <Form.Label style={{ marginTop: 5 }} column md={4}>\r\n                            Cost USD:\r\n                    </Form.Label>\r\n\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\r\n                            {toggle\r\n                                ? <Form.Control type=\"text\" onFocus={(e) => toggleListener(false, e.target.value)} value={usdAmount} />\r\n                                : <Form.Control type=\"text\" onChange={(e) => getUSD(e.target.value)} {...invalid} />\r\n                            }\r\n                        </Col>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please choose a username.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextTransFees\">\r\n                        <Form.Label style={{ marginTop: 5 }} column md={4}>\r\n                            Trans Fees:\r\n                        </Form.Label>\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\r\n                            <Form.Control readOnly value={fees} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextTotal\">\r\n                        <Form.Label style={{ marginTop: 5 }} column md={4}>\r\n                            Total(USD):\r\n                        </Form.Label>\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\r\n                            <Form.Control type=\"number\" readOnly value={(total)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group style={{ marginTop: 5 }} as={Row}>\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 10, offset: 5 }}>\r\n                            {hideButton ? null : <Button type=\"submit\" onClick={() => setShow(true)}>Continue</Button>}\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Card>\r\n            <PayInfo data={data} />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default BuyForm;","import React from \"react\";\r\nimport CoinGraph from \"../components/CoinGraph\";\r\nimport BuyForm from \"../components/BuyForm\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport {loadStripe} from '@stripe/stripe-js';\r\n// const { REACT_APP_STRIPE_PUBLISHABLE_KEY, REACT_APP_STRIPE_TEST_PUBLISHABLE_KEY } = process.env; // This does not work right now something with the way i'm calling it\r\n\r\n// const stripePromise = loadStripe(`\"${REACT_APP_STRIPE_TEST_PUBLISHABLE_KEY}\"`);\r\nconst stripePromise = loadStripe(\"pk_test_51IwEE1IfEtVhtvHpZQWzNy4cQE7zFhRUh78vuNtKysm9Mc5Zjs9dAH4FRRClE3a4MDw85OPJhJBcykpHbfyaP0Dm00MsH0JIB7\");\r\n\r\n\r\n\r\nfunction Buy() {\r\n\r\n\r\n  return (\r\n    <div style={{ overflow: \"hidden\"}}>\r\n      <Elements stripe={stripePromise}>\r\n        <CoinGraph />\r\n        <BuyForm />\r\n      </Elements>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buy;","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { Form, Col, Row, Container, Button, Card, Alert } from 'react-bootstrap';\r\nimport SessionContext from \"../../utils/sessionContext\";\r\nimport API from \"../../utils/api\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction SendForm() {\r\n    const formHandle = useRef();\r\n    const cost = useRef(0);\r\n    const { publicKey } = useContext(SessionContext);\r\n    const [coinVal, setCoinVal] = useState(0);\r\n    const [coinAmount, setCoinAmount] = useState(0);\r\n    const [toggle, setToggle] = useState(false);\r\n    const [usdVal, setUSDVal] = useState(0);\r\n    const [usdAmount, setUSDAmount] = useState(0);\r\n    const [fees, setFees] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [showAlertMessage, setShowAlertMessage] = useState(\"\");\r\n    const [showAlertVariant, setShowAlertVariant] = useState(\"danger\");\r\n\r\n    useEffect(() => {\r\n        API.getUSD()\r\n            .then(res => {\r\n                setCoinVal(res.data);\r\n                const div = 1 / res.data;\r\n                setUSDVal(div);\r\n            })\r\n    })\r\n\r\n    const handleAlertMessage = (message, variant) => {\r\n        if (message) {\r\n            setShowAlert(true);\r\n            setShowAlertMessage(message);\r\n            setShowAlertVariant(variant);\r\n        }\r\n    }\r\n\r\n    const handleCloseAlert = () => {\r\n        setShowAlert(false);\r\n        setShowAlertMessage(\"\");\r\n    }\r\n    //Input is coins\r\n    const getValue = (amount) => {\r\n        const value = amount * coinVal;\r\n        const fee = amount / 100;\r\n\r\n        setUSDAmount(value.toFixed(2));\r\n        setFees(fee);\r\n        const total = parseInt(amount) + parseInt(fee);\r\n        setTotal(total);\r\n    }\r\n\r\n    //Input is USD\r\n    const getUSD = (usd) => {\r\n        const value = usd * usdVal;\r\n        setCoinAmount(value);\r\n        const fee = value / 100;\r\n        setFees(fee);\r\n        const total = parseInt(value) + parseInt(fee);\r\n        setTotal(total);\r\n    }\r\n\r\n    const toggleListener = (boolean, val = 0) => {\r\n        if (boolean) {\r\n            setToggle(true)\r\n            getValue(val);\r\n        } else {\r\n            setToggle(false)\r\n            getUSD(val);\r\n        }\r\n    }\r\n\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        const data = [...formHandle.current].reduce((obj, input) => {\r\n            obj[input.getAttribute('id')] = input.value\r\n            return obj;\r\n        }, {})\r\n        data.from = publicKey;\r\n        console.log(data);\r\n        console.log(Object.values(data).reduce((a, c) => a && !!c, true));\r\n        if (!Object.values(data).reduce((result, value) => result && !!value, true)) {\r\n            handleAlertMessage(\"Fill out the entire form\", \"danger\");\r\n            return;\r\n        }\r\n        console.log(formHandle.current);\r\n        console.log(formHandle.current[0].value);\r\n        API.sendTransaction(data)\r\n            .then(res => {\r\n                handleAlertMessage(\"Transaction successful.\", \"success\");\r\n            }).catch(err =>{\r\n                handleAlertMessage(err.response.data.message, \"danger\");\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container >\r\n            <Card className=\"cardStyle\" style={{padding: 50}}>\r\n                <Alert\r\n                    show={showAlert}\r\n                    variant={showAlertVariant}\r\n                    onClose={() => { handleCloseAlert() }}\r\n                >\r\n                    <p>{showAlertMessage}</p>\r\n                </Alert>\r\n                <Form ref={formHandle}>\r\n                    <Form.Group as={Row} controlId=\"to\">\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 7, offset: 2 }}>\r\n                            <Form.Control className=\"inputBox\" type=\"text\" placeholder=\"Recipient (Public Key)\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"private\">\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 7, offset: 2 }}>\r\n                            <Form.Control className=\"inputBox\" type=\"text\" placeholder=\"Private Key\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"label\">\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 7, offset: 2 }}>\r\n                            <Form.Control className=\"inputBox\" type=\"text\" placeholder=\"Label\"/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"amount\">\r\n                        <Form.Label style={{ marginTop: 5 }} column md={4}>\r\n                            Amount of Coins:\r\n                        </Form.Label>\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\r\n                            {toggle\r\n                                ? <Form.Control className=\"inputBox\" ref={cost} type=\"text\" onChange={(e) => getValue(e.target.value)} />\r\n                                : <Form.Control className=\"inputBox\" ref={cost} type=\"text\" onFocus={(e) => toggleListener(true, e.target.value)} value={coinAmount} />\r\n                            }\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"cost\">\r\n                        <Form.Label style={{ marginTop: 5 }} column md={4}>\r\n                            Cost USD:\r\n                        </Form.Label>\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\r\n                            {toggle\r\n                                ? <Form.Control className=\"inputBox\" type=\"text\" onFocus={(e) => toggleListener(false, e.target.value)} value={usdAmount} />\r\n                                : <Form.Control className=\"inputBox\" type=\"text\" onChange={(e) => getUSD(e.target.value)} />\r\n                            }\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextTransFees\">\r\n                        <Form.Label style={{ marginTop: 5 }} column md={4}>\r\n                            Trans Fees 1%:\r\n                        </Form.Label>\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\r\n                            <Form.Control readOnly value={fees} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextTotal\">\r\n                        <Form.Label style={{ marginTop: 5 }} column md={4}>\r\n                            Total(coins):\r\n                        </Form.Label>\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 4, offset: 4 }}>\r\n                            <Form.Control readOnly value={(total)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Col style={{ marginTop: 5 }} md={{ span: 10, offset: 5 }}>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n                <Button type=\"button\" onClick={submitForm}>Continue</Button>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SendForm;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport SessionContext from \"../../utils/sessionContext\";\r\nimport API from \"../../utils/api\";\r\nimport \"./style.css\";\r\n\r\n// Passprops to the wallet coins in order to render the amount associated to the public key.\r\n\r\n\r\nfunction WalletCoinsUser() {\r\n\r\n    const { publicKey } = useContext(SessionContext);\r\n    const [coin, setCoin] = useState();\r\n    const [USD, setUSD] = useState();\r\n\r\n    useEffect(() => {\r\n        getUserBalance();\r\n    })\r\n\r\n    const getUserBalance = () => {\r\n        API.getAddressBalance(publicKey)\r\n            .then(res => {\r\n                setCoin(res.data)\r\n                getUSD();\r\n            })\r\n    }\r\n\r\n    const getUSD = () => {\r\n        API.getUSD()\r\n            .then(res => {\r\n                const value = res.data * coin;\r\n                setUSD(value.toFixed(2));\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Card className=\"walletCard\" body style={{ textAlign: 'center' }}>\r\n                <h2>Send Coins</h2>\r\n                <h3 style={{float: 'left'}}>Coin: {coin} </h3>\r\n                <h3 style={{float: 'right'}}>USD: ${USD}</h3>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default WalletCoinsUser;","import React from \"react\";\r\nimport SendForm from \"../components/SendForm\";\r\nimport WalletCoinsUser from \"../components/WalletCoinsSend\";\r\n\r\nfunction Send() {\r\n  return (\r\n    <>\r\n        <WalletCoinsUser />\r\n        <SendForm />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Send;","import React, { useState, useRef } from 'react';\r\nimport { Card, Button, Modal } from 'react-bootstrap';\r\nimport API from \"../../utils/api\";\r\nimport \"./style.css\";\r\n\r\nfunction MiningHero() {\r\nconst [timer, setTimer] = useState(0)\r\nconst [isActive, setIsActive] = useState(false)\r\nconst countRef = useRef(null)\r\nconst [show, setShow] = useState(false);\r\nconst [showFail, setShowFail] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleCloseFail = () => setShowFail(false);\r\n\r\n    const handleStart = () => {\r\n        setIsActive(true);\r\n        countRef.current = setInterval(() => {\r\n        setTimer((timer) => timer + 1)\r\n        }, 1000)\r\n        API.startMining()\r\n        .then(res => {\r\n            clearInterval(countRef.current);\r\n            setIsActive(false);\r\n            setShow(true);\r\n            setTimer(0);\r\n            console.log(res.data);\r\n        })\r\n    }\r\n    const formatTime = () => {\r\n        const getSeconds = `0${(timer % 60)}`.slice(-2)\r\n        const minutes = `${Math.floor(timer / 60)}`\r\n        const getMinutes = `0${minutes % 60}`.slice(-2)\r\n    \r\n        return `${getMinutes} : ${getSeconds}`\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {/* Need to change size of image/card */}\r\n            <Card.Img variant=\"\" src='./assets/MiningGif.gif' />\r\n            <Card className=\"text-center\">\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        Information about mining: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \r\n                        Etiam non quam lacus suspendisse. Facilisis magna etiam tempor orci eu. Id porta nibh venenatis cras sed felis eget velit. Ullamcorper dignissim cras tincidunt lobortis feugiat vivamus at augue. \r\n                        Tristique magna sit amet purus. Etiam dignissim diam quis enim lobortis. \r\n                        Cursus vitae congue mauris rhoncus. Aenean pharetra magna ac placerat. Scelerisque purus semper eget duis at.\r\n                    </Card.Text>\r\n                    {!isActive ? (<Button variant=\"dark\" style={{width: '25%'}} onClick={() => handleStart()}>Start Mining</Button>) : <p>{formatTime()}</p>}\r\n                </Card.Body>\r\n            </Card>\r\n            {/* Successfully Mined modal */}\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        <h3>Mining Success!</h3>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h3 className=\"mineIcon\">⛏️</h3>\r\n                    <p>Your mining reward of <strong>100 Cryptocoins</strong> was added to the pending transactions and will be awarded when it is mined.</p>\r\n                    <p>Thanks for mining!</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Failed Mined modal */}\r\n            <Modal\r\n                show={showFail}\r\n                onHide={handleCloseFail}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        <h3>Mining unsuccessful!</h3>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h3 className=\"mineIcon\">⛏️</h3>\r\n                    <p>Someone else mined the transaction.</p>\r\n                    <p>Thanks for mining. Please, try again!</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleCloseFail}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default MiningHero;","import React from 'react';\r\nimport MiningHero from '../components/MiningHero';\r\n\r\n\r\nfunction MiningPage() {\r\n    return (\r\n        <>\r\n        <MiningHero/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MiningPage;","import React from 'react';\r\nimport { Card, } from 'react-bootstrap';\r\nimport './style.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <Card id=\"footer\"\r\n            className=\"text-center\" bg=\"dark\" text=\"white\">\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        Cryptonite created by : \r\n                        <a href=\"https://github.com/cheng21tang\" target=\"blank\"> Cheng Tang </a> | \r\n                        <a href=\"https://github.com/Dylancouzon\" target=\"blank\"> Dylan Couzon </a> |\r\n                        <a href=\"https://github.com/dnovelli1\" target=\"blank\"> Jake Novelli</a> |\r\n                        <a href= \"https://github.com/LiamStewart8\" target=\"blank\"> Liam Stewart</a>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"./components/Navbar\";\r\nimport Home from \"./pages/Home\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Buy from \"./pages/Buy\";\r\nimport Send from \"./pages/Send\";\r\nimport Mining from \"./pages/Mining\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport SessionContext from \"./utils/sessionContext\";\r\nimport Footer from \"./components/Footer\";\r\nimport API from \"./utils/api\";\r\nimport \"./app.css\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.setSession = ({ username, publicKey, logged_in }) => {\r\n      // console.log(username, publicKey, logged_in);\r\n      this.setState(state => ({\r\n        username: username,\r\n        publicKey: publicKey,\r\n        logged_in: logged_in\r\n      }))\r\n    }\r\n\r\n    this.state = {\r\n      setSession: this.setSession,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.logged_in) {\r\n      API.getSessions()\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.logged_in) {\r\n            this.setSession(res.data);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SessionContext.Provider value={this.state}>\r\n        <Router>\r\n          <Navigation />\r\n          <Container>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route exact path=\"/buy\" component={Buy} />\r\n              <Route exact path=\"/send\" component={Send} />\r\n              <Route exact path=\"/mining\" component={Mining} />\r\n            </Switch>\r\n          </Container>\r\n          <Footer />\r\n        </Router>\r\n      </SessionContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}